{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/icons/delete.png';\nimport _imports_1 from '../assets/icons/edit.png';\nimport _imports_2 from '../assets/icons/like.png';\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-040e3608\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"comment-form\"\n};\nconst _hoisted_2 = {\n  class: \"commentField\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Name\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  class: \"commentField\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Comment\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"success-message\"\n};\nconst _hoisted_8 = {\n  class: \"commentPosts\",\n  border: \"1px\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"Comments posted\"), /*#__PURE__*/_createElementVNode(\"td\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = [\"onClick\"];\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_0,\n  alt: \"delete\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = [_hoisted_12];\nconst _hoisted_14 = [\"onClick\"];\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_1,\n  alt: \"edit\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_16 = [_hoisted_15];\nconst _hoisted_17 = {\n  id: \"counter\"\n};\n\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"bold\"\n}, \"Like Hap?\", -1\n/* HOISTED */\n));\n\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_2,\n  alt: \"edit\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_20 = [_hoisted_19];\nconst _hoisted_21 = {\n  class: \"likeCountStyling\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    class: \"commentForm\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    ref: \"name\",\n    type: \"text\",\n    class: _normalizeClass({\n      'has-error': $data.submitting && $options.invalidName\n    }),\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.comment.name = $event),\n    onFocus: _cache[1] || (_cache[1] = (...args) => $options.clearStatus && $options.clearStatus(...args)),\n    onKeypress: _cache[2] || (_cache[2] = (...args) => $options.clearStatus && $options.clearStatus(...args))\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, $data.comment.name]])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    ref: \"post\",\n    type: \"text\",\n    class: _normalizeClass({\n      'has-error': $data.submitting && $options.invalidComment\n    }),\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.comment.post = $event),\n    onFocus: _cache[4] || (_cache[4] = (...args) => $options.clearStatus && $options.clearStatus(...args)),\n    onKeypress: _cache[5] || (_cache[5] = (...args) => $options.clearStatus && $options.clearStatus(...args))\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, $data.comment.post]])]), $data.error && $data.submitting ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \" ❗Please fill out all fields \")) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" ✅ Comment successfully added \")) : _createCommentVNode(\"v-if\", true)], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.addComment($data.comment.id)),\n    class: \"button--primary\"\n  }, \" Add Comment \")]), _createElementVNode(\"table\", _hoisted_8, [$data.comment.length < 1 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"No events\")) : _createCommentVNode(\"v-if\", true), _hoisted_10, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: comment.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(comment.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(comment.post), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteComment(comment.id)\n    }, _hoisted_13, 8\n    /* PROPS */\n    , _hoisted_11), _createElementVNode(\"button\", {\n      onClick: $event => $options.editComment(comment.id)\n    }, _hoisted_16, 8\n    /* PROPS */\n    , _hoisted_14)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createCommentVNode(\"Add a counter\"), _createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _createElementVNode(\"button\", {\n    id: \"like\",\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.incrementValue && _ctx.incrementValue(...args)),\n    class: \"button-reset bg-green ba b--black ph4 pv3 mb2 white f4 dim\"\n  }, _hoisted_20), _createElementVNode(\"div\", _hoisted_21, _toDisplayString($data.counter), 1\n  /* TEXT */\n  )])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_imports_0","_imports_1","_imports_2","id","class","_createElementVNode","border","src","alt","_hoisted_12","_hoisted_15","_hoisted_19","onSubmit","$options","_hoisted_3","ref","type","$data","name","$event","onFocus","onKeypress","_hoisted_5","post","_createElementBlock","onClick","length","_hoisted_9","_hoisted_10","_Fragment","_renderList","comment","key","_toDisplayString","_createCommentVNode","_hoisted_18","_ctx"],"sourceRoot":"","sources":["C:\\yoobee_JS_Framework_Assignment\\src\\components\\Users.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"comment-form\">\r\n      <form class=\"commentForm\" @submit.prevent=\"handleSubmit\">\r\n        <div class=\"commentField\">\r\n          <label>Name</label>\r\n          <input\r\n            ref=\"name\"\r\n            type=\"text\"\r\n            :class=\"{ 'has-error': submitting && invalidName }\"\r\n            v-model=\"comment.name\"\r\n            @focus=\"clearStatus\"\r\n            @keypress=\"clearStatus\"\r\n          />\r\n        </div>\r\n        <div class=\"commentField\">\r\n          <label>Comment</label>\r\n          <input\r\n            ref=\"post\"\r\n            type=\"text\"\r\n            :class=\"{ 'has-error': submitting && invalidComment }\"\r\n            v-model=\"comment.post\"\r\n            @focus=\"clearStatus\"\r\n            @keypress=\"clearStatus\"\r\n          />\r\n        </div>\r\n        <p v-if=\"error && submitting\" class=\"error-message\">\r\n          ❗Please fill out all fields\r\n        </p>\r\n        <p v-if=\"success\" class=\"success-message\">\r\n          ✅ Comment successfully added\r\n        </p>\r\n      </form>\r\n      <button v-on:click=\"addComment(comment.id)\" class=\"button--primary\">\r\n        Add Comment\r\n      </button>\r\n    </div>\r\n\r\n    <table class=\"commentPosts\" border=\"1px\">\r\n        <p v-if=\"comment.length < 1\" >No events</p>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Comments posted</td>\r\n        <td></td>\r\n      </tr>\r\n      <tr v-for=\"comment in comments\" v-bind:key=\"comment.id\">\r\n        <td>{{ comment.name }}</td>\r\n        <td>{{ comment.post }}</td>\r\n        <td>\r\n          <button v-on:click=\"deleteComment(comment.id)\">\r\n            <img\r\n              class=\"crudIcon\"\r\n              src=\"../assets/icons/delete.png\"\r\n              alt=\"delete\"\r\n            />\r\n          </button>\r\n          <button v-on:click=\"editComment(comment.id)\">\r\n            <img\r\n              class=\"crudIcon\"\r\n              src=\"../assets/icons/edit.png\"\r\n              alt=\"edit\"\r\n            />\r\n          </button>\r\n\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  <!--Add a counter-->\r\n    <div id=\"counter\">\r\n      <p class=\"bold\">Like Hap?</p>\r\n      <button\r\n        id=\"like\"\r\n        @click=\"incrementValue\"\r\n        class=\"button-reset bg-green ba b--black ph4 pv3 mb2 white f4 dim\">\r\n          <img class=\"crudIcon\" src=\"../assets/icons/like.png\" alt=\"edit\" />\r\n        </button>\r\n      <div class=\"likeCountStyling\">{{ counter }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport CommentTable from \"@/components/CommentTable.vue\";\r\n\r\nexport default {\r\n  name: \"Users\",\r\n  data() {\r\n    return {\r\n      CommentTable,\r\n      counter: 65789,\r\n      comments: null,\r\n      error: false,\r\n      submitting: false,\r\n      success: false,\r\n      comment: {\r\n        name: \"\",\r\n        post: \"\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    invalidName() {\r\n      return this.comment.name === \"\";\r\n    },\r\n      invalidComment() {\r\n      return this.comment.post === \"\";\r\n    },\r\n  },\r\n  methods: {\r\n    handleSubmit() {\r\n      this.clearStatus();\r\n      this.submitting = true;\r\n\r\n      if (this.invalidName || this.invalidComment) {\r\n        this.error = true;\r\n        return;\r\n      }\r\n\r\n      this.$emit(\"add:comment\", this.comment);\r\n      this.$refs.first.focus();\r\n      this.comment = {\r\n        name: \"\",\r\n        post: \"\",\r\n      };\r\n      this.clearStatus();\r\n      this.submitting = false;\r\n    },\r\n\r\n    clearStatus() {\r\n      this.success = false;\r\n      this.error = false;\r\n    },\r\n    getData() {\r\n      axios.get(\"http://localhost:3000/comments\").then((response) => {\r\n        this.users = response.data;\r\n        this.comments = response.data;\r\n      });\r\n    },\r\n    async deleteComment(id) {\r\n      try {\r\n        await fetch(`http://localhost:3000/comments/${id}`, {\r\n          method: \"DELETE\",\r\n        });\r\n        this.comments = this.comments.filter((comment) => comment.id !== id);\r\n        console.log(this.comment.id);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async addComment() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3000/comments\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(this.comment),\r\n          headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\r\n        });\r\n        const data = await response.json();\r\n        this.comments = [...this.comments, data];\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async editComment(id, updatedComment) {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3000/comments/${id}`,\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(updatedComment),\r\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        this.comments = this.comments.map(comment =>\r\n          comment.id === id ? data : comment\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getData();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n#counter {\r\n    margin-bottom: 70px;\r\n}\r\n\r\n.commentPosts {\r\n  width: 50%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 50px;\r\n  margin-bottom: 100px;\r\n  border: none;\r\n  border: 1px solid var(--green);\r\n   border-collapse: separate;\r\n   border-spacing: 0;\r\n}\r\n\r\n.commentPosts td {\r\n   border: 1px solid var(--green);\r\n   border-collapse: separate;\r\n   border-spacing: 0;\r\n}\r\n\r\n.commentField {\r\n  margin-bottom: 10px;\r\n  justify-content:center;\r\n  display: flex;\r\n}\r\n\r\n.commentField label {\r\n width: 100px;\r\n}\r\n\r\n.commentField input {\r\n  width: 500px;\r\n}\r\n\r\n\r\nbutton {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}