{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"create\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_event_form = _resolveComponent(\"event-form\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_event_form, {\n    \"onAdd:employee\": _ctx.addEmployee\n  }, null, 8\n  /* PROPS */\n  , [\"onAdd:employee\"])]);\n}","map":{"version":3,"mappings":";;EAGSA,KAAK,EAAC;;;;;uBAAXC,oBAIM,KAJN,cAIM,CAFNC,aAAyCC,qBAAzC,EAAyC;IAA5B,kBAAcC;EAAc,CAAzC,EAAsC,IAAtC,EAAsC;EAAA;EAAtC,EAAsC,kBAAtC,CAEM,CAJN","names":["class","_createElementBlock","_createVNode","_component_event_form","_ctx"],"sourceRoot":"","sources":["C:\\yoobee_JS_Framework_Assignment\\src\\views\\CreateEvent.vue"],"sourcesContent":["<!--Thomas to update functionality-->\r\n<template>\r\n\r\n    <div class=\"create\">\r\n      \r\n    <event-form @add:employee=\"addEmployee\"/>\r\n\r\n    </div>\r\n\r\n   \r\n  \r\n  </template>\r\n  \r\n  <script>\r\n  import EventForm from \"@/components/EventForm.vue\";\r\n\r\nexport default {\r\n  name: \"app\",\r\n  components: {\r\n    EventForm\r\n  },\r\n  data() {\r\n    return {\r\n      events: []\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.getEvents();\r\n  },\r\n\r\n  methods: {\r\n    async getEvents() {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://jsonplaceholder.typicode.com/users\"\r\n        );\r\n        const data = await response.json();\r\n        this.events = data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async addEvent(event) {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://jsonplaceholder.typicode.com/users\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(event),\r\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        this.events = [...this.events, data];\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async editEvent(id, updatedEvent) {\r\n      try {\r\n        const response = await fetch(\r\n          `https://jsonplaceholder.typicode.com/users/${id}`,\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(updatedEvent),\r\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        this.events = this.events.map(event =>\r\n          event.id === id ? data : event\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async deleteEvent(id) {\r\n      try {\r\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\r\n          method: \"DELETE\"\r\n        });\r\n        this.employees = this.employees.filter(employee => employee.id !== id);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n}; \r\n  </script>\r\n  \r\n  <style>\r\n  @import '../assets/styles/main.css';\r\n  .formBorder{\r\n  border: 2px solid blue; \r\n  margin-top: 10%;\r\n  display: inline-block;\r\n  padding-left: 15%;\r\n  padding-right: 15%;\r\n  padding-top: 1%;\r\n  padding-bottom: 1%; \r\n}\r\n\r\n\r\n\r\n#address{\r\n  width: 353px;\r\n}\r\n\r\n#category, #privacy {\r\n  width: 360px;\r\n}\r\n\r\n#description{\r\n  border: 2px solid blue; \r\n  display: inline-block;\r\n  padding-left: 14%;\r\n  padding-right: 14.6%;\r\n  padding-top: 1%;\r\n  padding-bottom: 1%; \r\n}\r\n\r\n.postit {\r\n  width: 100px;\r\n  height: 30px;\r\n  float: right;\r\n  margin-left: 10px;\r\n}\r\n\r\n.postit:hover {\r\n  transform: scale(1.1);\r\n  background-color: #06bdb6;\r\n}\r\n\r\n.cancelit {\r\n  width: 100px;\r\n  height: 30px;\r\n  float: right;\r\n  color: red;\r\n  border: 2px solid red;\r\n}\r\n\r\n.cancelit:hover {\r\n  transform: scale(1.1);\r\n  background-color: red;\r\n  color: white\r\n}\r\n  </style>"]},"metadata":{},"sourceType":"module"}