{"ast":null,"code":"import defaultImage from \"./assets/logo/logo.JPG\";\nexport default {\n  name: \"ProfileForm\",\n  props: {\n    src: {\n      type: String\n    },\n    maxSize: {\n      type: Number,\n      default: 2097152\n    },\n    isUploading: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      file: {},\n      uploadedImageSrc: \"\",\n      errorMessage: \"\"\n    };\n  },\n\n  methods: {\n    preventClick() {// placeholder to prevent click on the overlay\n    },\n\n    onDragEnterAndOver(event) {\n      event.dataTransfer.dropEffect = \"move\";\n    },\n\n    testFile(file) {\n      this.errorMessage = \"\";\n      const humanReadableSize = this.maxSize;\n\n      if (!file) {\n        return true;\n      }\n\n      if (!/image(\\/{1})(jpeg|png|jpg|gif)/.test(file.type)) {\n        this.errorMessage = `Wrong filetype, please upload a png, jpeg, jpg or a gif file`;\n        return true;\n      }\n\n      if (file.size > this.maxSize) {\n        this.errorMessage = `File size exceeds ${humanReadableSize}, please upload an image less than ${humanReadableSize}`;\n        return true;\n      }\n\n      return;\n    },\n\n    onDrop(event) {\n      const uploadedFile = event.dataTransfer.files[0];\n\n      if (this.testFile(uploadedFile)) {\n        return;\n      }\n\n      this.file = uploadedFile;\n      this.renderImage(this.file);\n    },\n\n    openFileUpload() {\n      this.$refs.avatarRef.click();\n    },\n\n    onFileUpload() {\n      const uploadedFile = this.$refs.avatarRef.files[0];\n\n      if (this.testFile(uploadedFile)) {\n        return;\n      }\n\n      this.file = uploadedFile;\n      this.renderImage(this.file);\n    },\n\n    renderImage(file) {\n      const fileReader = new FileReader();\n\n      fileReader.onload = event => {\n        this.uploadedImageSrc = event.target.result;\n        this.$emit(\"image-upload\", this.file);\n      };\n\n      fileReader.readAsDataURL(file);\n    },\n\n    removeImage() {\n      this.file = \"\";\n      this.uploadedImageSrc = \"\";\n      this.$emit(\"remove-image\");\n    }\n\n  },\n  computed: {\n    imgSrc() {\n      if (!this.isUploading && this.src) {\n        return this.src;\n      }\n\n      return this.uploadedImageSrc || defaultImage;\n    }\n\n  },\n  watch: {\n    isUploading(newValue, oldValue) {\n      if (newValue !== oldValue && newValue === false) {\n        this.uploadedImageSrc = \"\";\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["defaultImage","name","props","src","type","String","maxSize","Number","default","isUploading","Boolean","data","file","uploadedImageSrc","errorMessage","methods","preventClick","onDragEnterAndOver","event","dataTransfer","dropEffect","testFile","humanReadableSize","test","size","onDrop","uploadedFile","files","renderImage","openFileUpload","$refs","avatarRef","click","onFileUpload","fileReader","FileReader","onload","target","result","$emit","readAsDataURL","removeImage","computed","imgSrc","watch","newValue","oldValue"],"sourceRoot":"","sources":["C:\\yoobee_JS_Framework_Assignment\\src\\components\\ProfileForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div\r\n      class=\"image-container\"\r\n      @click=\"openFileUpload();\"\r\n      @drop.prevent.stop=\"onDrop($event);\"\r\n      @dragenter.prevent.stop=\"onDragEnterAndOver($event);\"\r\n      @dragover.prevent.stop=\"onDragEnterAndOver($event);\"\r\n    >\r\n      <img :src=\"imgSrc\" alt=\"User Avatar here\" id=\"avatar\" />\r\n      <input\r\n        type=\"file\"\r\n        name=\"fileInput\"\r\n        id=\"fileInput\"\r\n        ref=\"avatarRef\"\r\n        accept=\"image/*\"\r\n        @change=\"onFileUpload();\"\r\n      />\r\n      <i class=\"fas fa-trash-alt remove-image\" @click.stop=\"removeImage();\"></i>\r\n      <div\r\n        class=\"loading-overlay\"\r\n        @click.stop=\"preventClick();\"\r\n        v-if=\"isUploading\"\r\n      >\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n      </div>\r\n    </div>\r\n    <p class=\"error-message\">{{ errorMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport defaultImage from \"./assets/logo/logo.JPG\";\r\n\r\nexport default {\r\n  name: \"ProfileForm\",\r\n  props: {\r\n    src: {\r\n      type: String\r\n    },\r\n    maxSize: {\r\n      type: Number,\r\n      default: 2097152\r\n    },\r\n    isUploading: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      file: {},\r\n      uploadedImageSrc: \"\",\r\n      errorMessage: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    preventClick() {\r\n      // placeholder to prevent click on the overlay\r\n    },\r\n    onDragEnterAndOver(event) {\r\n      event.dataTransfer.dropEffect = \"move\";\r\n    },\r\n    testFile(file) {\r\n      this.errorMessage = \"\";\r\n      const humanReadableSize = (this.maxSize);\r\n      if (!file) {\r\n        return true;\r\n      }\r\n\r\n      if (!/image(\\/{1})(jpeg|png|jpg|gif)/.test(file.type)) {\r\n        this.errorMessage = `Wrong filetype, please upload a png, jpeg, jpg or a gif file`;\r\n        return true;\r\n      }\r\n\r\n      if (file.size > this.maxSize) {\r\n        this.errorMessage = `File size exceeds ${humanReadableSize}, please upload an image less than ${humanReadableSize}`;\r\n        return true;\r\n      }\r\n\r\n      return;\r\n    },\r\n    onDrop(event) {\r\n      const uploadedFile = event.dataTransfer.files[0];\r\n\r\n      if (this.testFile(uploadedFile)) {\r\n        return;\r\n      }\r\n\r\n      this.file = uploadedFile;\r\n      this.renderImage(this.file);\r\n    },\r\n    openFileUpload() {\r\n      this.$refs.avatarRef.click();\r\n    },\r\n    onFileUpload() {\r\n      const uploadedFile = this.$refs.avatarRef.files[0];\r\n\r\n      if (this.testFile(uploadedFile)) {\r\n        return;\r\n      }\r\n\r\n      this.file = uploadedFile;\r\n      this.renderImage(this.file);\r\n    },\r\n    renderImage(file) {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = event => {\r\n        this.uploadedImageSrc = event.target.result;\r\n        this.$emit(\"image-upload\", this.file);\r\n      };\r\n      fileReader.readAsDataURL(file);\r\n    },\r\n    removeImage() {\r\n      this.file = \"\";\r\n      this.uploadedImageSrc = \"\";\r\n      this.$emit(\"remove-image\");\r\n    }\r\n  },\r\n  computed: {\r\n    imgSrc() {\r\n      if (!this.isUploading && this.src) {\r\n        return this.src;\r\n      }\r\n\r\n      return this.uploadedImageSrc || defaultImage;\r\n    }\r\n  },\r\n  watch: {\r\n    isUploading(newValue, oldValue) {\r\n      if (newValue !== oldValue && newValue === false) {\r\n        this.uploadedImageSrc = \"\";\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image-container {\r\n  height: 100px;\r\n  width: 100px;\r\n  border: 5px solid #666;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  cursor: pointer;\r\n}\r\n\r\n#fileInput {\r\n  visibility: hidden;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n}\r\n\r\n#avatar {\r\n  height: 100px;\r\n  width: 100px;\r\n  object-fit: cover;\r\n}\r\n\r\n.remove-image {\r\n  color: #666;\r\n  position: absolute;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  font-size: 15px;\r\n  opacity: 0.4;\r\n  z-index: 999;\r\n}\r\n\r\n.remove-image:hover {\r\n  opacity: 0.7;\r\n}\r\n\r\n.loading-overlay {\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #999;\r\n  opacity: 0.4;\r\n}\r\n\r\n.loading-overlay i {\r\n  font-size: 35px;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}