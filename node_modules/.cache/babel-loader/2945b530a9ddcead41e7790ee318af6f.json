{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  id: \"profile\"\n};\nconst _hoisted_2 = {\n  class: \"file-upload-form\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Upload an image file: \");\n\nconst _hoisted_4 = {\n  key: 0,\n  class: \"image-preview\"\n};\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_event_form = _resolveComponent(\"event-form\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.previewImage && $options.previewImage(...args)),\n    accept: \"image/*\"\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  )]), _ctx.imageData.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    class: \"preview\",\n    src: _ctx.imageData\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5)])) : _createCommentVNode(\"v-if\", true)])]), _createVNode(_component_event_form, {\n    \"onAdd:event\": _ctx.addEvent\n  }, null, 8\n  /* PROPS */\n  , [\"onAdd:event\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAGOA,EAAE,EAAC;;;EAECC,KAAK,EAAC;;;iDAAmB;;;;EAIzBA,KAAK,EAAC;;;;;;6DANfC,oBAUM,KAVN,cAUM,CATJA,oBAQM,KARN,EAQM,IARN,EAQM,CAPJA,oBAGM,KAHN,cAGM,aADJA,oBAA2D,OAA3D,EAA2D;IAApDC,IAAI,EAAC,MAA+C;IAAvCC,QAAM,yCAAEC,uDAAF,CAAiC;IAAjBC,MAAM,EAAC;EAAU,CAA3D;;EAAA,CACI,CAHN,CAOI,EAH6BC,eAAUC,MAAV,GAAgB,mBAAjDC,oBAEM,KAFN,cAEM,CADJP,oBAAsC,KAAtC,EAAsC;IAAjCD,KAAK,EAAC,SAA2B;IAAhBS,GAAG,EAAEH;EAAW,CAAtC;;EAAA,aACI,CAFN,sCAGI,CARN,CASI,CAVN,GAYAI,aAAmCC,qBAAnC,EAAmC;IAAtB,eAAWL;EAAW,CAAnC,EAAgC,IAAhC,EAAgC;EAAA;EAAhC,EAAgC,eAAhC","names":["id","class","_createElementVNode","type","onChange","$options","accept","_ctx","length","_createElementBlock","src","_createVNode","_component_event_form"],"sourceRoot":"","sources":["C:\\yoobee_JS_Framework_Assignment\\src\\views\\ProfileView.vue"],"sourcesContent":["<template>\r\n  \r\n\r\n  <div id=\"profile\">\r\n    <div>\r\n      <div class=\"file-upload-form\">\r\n        Upload an image file:\r\n        <input type=\"file\" @change=\"previewImage\" accept=\"image/*\">\r\n      </div>\r\n      <div class=\"image-preview\" v-if=\"imageData.length > 0\">\r\n        <img class=\"preview\" :src=\"imageData\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <event-form @add:event=\"addEvent\"/>\r\n\r\n\r\n</template>\r\n\r\n\r\n\r\n<style>\r\n@import '../assets/styles/main.css';\r\n</style>\r\n\r\n<script>\r\nimport ProfileForm from \"@/components/ProfileForm.vue\";\r\n\r\n  export default {\r\n  name: \"profile\",\r\n  components: {\r\n    ProfileForm\r\n  },\r\n  data: {\r\n    imageData: \"\" // we will store base64 format of image in this string\r\n  },\r\n  methods: {\r\n    previewImage: function (event) {\r\n      // Reference to the DOM input element\r\n      var input = event.target;\r\n      // Ensure that you have a file before attempting to read it\r\n      if (input.files && input.files[0]) {\r\n        // create a new FileReader to read this image and convert to base64 format\r\n        var reader = new FileReader();\r\n        // Define a callback function to run, when FileReader finishes its job\r\n        reader.onload = (e) => {\r\n          // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\r\n          // Read image as base64 and set to imageData\r\n          this.imageData = e.target.result;\r\n        };\r\n        // Start the reader job - read file as a data url (base64 format)\r\n        reader.readAsDataURL(input.files[0]);\r\n      }\r\n    }\r\n  }\r\n}; \r\n</script>\r\n\r\n//import { change } from \"../assets/JS/views.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}