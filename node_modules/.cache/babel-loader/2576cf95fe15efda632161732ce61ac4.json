{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"create\"\n};\nconst _hoisted_2 = {\n  id: \"app\",\n  class: \"small-container\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title--secondary\"\n}, \"Comments\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_event_form = _resolveComponent(\"event-form\");\n\n  const _component_event_table = _resolveComponent(\"event-table\");\n\n  const _component_comment_form = _resolveComponent(\"comment-form\");\n\n  const _component_Users = _resolveComponent(\"Users\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_event_form, {\n    \"onAdd:event\": $options.addEvent\n  }, null, 8\n  /* PROPS */\n  , [\"onAdd:event\"]), _createVNode(_component_event_table, {\n    class: \"displayCenter\",\n    events: $data.events,\n    \"onDelete:event\": $options.deleteEvent,\n    \"onEdit:event\": $options.editEvent,\n    \"onComment:event\": _ctx.commentEvent\n  }, null, 8\n  /* PROPS */\n  , [\"events\", \"onDelete:event\", \"onEdit:event\", \"onComment:event\"])]), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createVNode(_component_comment_form, {\n    \"onAdd:comment\": $options.addComment\n  }, null, 8\n  /* PROPS */\n  , [\"onAdd:comment\"]), _createVNode(_component_Users), _createCommentVNode(\" <comment-table\\n      :comments=\\\"comments\\\"\\n      @delete:comment=\\\"deleteComment\\\"\\n      @edit:comment=\\\"editComment\\\"\\n    /> \")])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAGOA,KAAK,EAAC;;;EAWJC,EAAE,EAAC;EAAMD,KAAK,EAAC;;;gCACpBE,oBAA0C,IAA1C,EAA0C;EAAtCF,KAAK,EAAC;AAAgC,CAA1C,EAA6B,UAA7B,EAAqC;AAAA;AAArC;;;;;;;;;;;6DAZFE,oBASM,KATN,cASM,CARJC,aAAmCC,qBAAnC,EAAmC;IAAtB,eAAWC;EAAW,CAAnC,EAAgC,IAAhC,EAAgC;EAAA;EAAhC,EAAgC,eAAhC,CAQI,EAPJF,aAMEG,sBANF,EAME;IALAN,KAAK,EAAC,eAKN;IAJCO,MAAM,EAAEC,YAIT;IAHC,kBAAcH,oBAGf;IAFC,gBAAYA,kBAEb;IADC,mBAAeI;EAChB,CANF;;EAAA,kEAOI,CATN,GAWEP,oBAUI,KAVJ,cAUI,CATJQ,UASI,EAPJP,aAAyCQ,uBAAzC,EAAyC;IAA1B,iBAAaN;EAAa,CAAzC,EAAsC,IAAtC,EAAsC;EAAA;EAAtC,EAAsC,iBAAtC,CAOI,EANJF,aAAQS,gBAAR,CAMI,EALJC,2JAKI,CAVJ","names":["class","id","_createElementVNode","_createVNode","_component_event_form","$options","_component_event_table","events","$data","_ctx","_hoisted_3","_component_comment_form","_component_Users","_createCommentVNode"],"sourceRoot":"","sources":["/Users/justinaho1996/yoobee_JS_Framework_Assignment/src/views/CreateEvent.vue"],"sourcesContent":["<!--Thomas to update functionality-->\n<!--Functionality to be tested by Justina Ho-->\n<template>\n  <div class=\"create\">\n    <event-form @add:event=\"addEvent\"/>\n    <event-table\n      class=\"displayCenter\"\n      :events=\"events\"\n      @delete:event=\"deleteEvent\"\n      @edit:event=\"editEvent\"\n      @comment:event=\"commentEvent\"\n    />\n  </div>\n\n    <div id=\"app\" class=\"small-container\">\n    <h2 class=\"title--secondary\">Comments</h2>\n\n    <comment-form @add:comment=\"addComment\"/>\n    <Users/>\n    <!-- <comment-table\n      :comments=\"comments\"\n      @delete:comment=\"deleteComment\"\n      @edit:comment=\"editComment\"\n    /> -->\n  </div>\n\n</template>\n\n<style>\n@import \"../assets/styles/main.css\";\n</style>\n\n<script>\nimport EventForm from \"@/components/EventForm.vue\";\nimport EventTable from \"@/components/EventTable.vue\";\n// import CommentTable from \"@/components/CommentTable.vue\";\nimport CommentForm from \"@/components/CommentForm.vue\";\nimport Users from \"@/components/Users.vue\";\n// const baseURL = \"http://localhost:3000/events\";\n// const commentURL = \"http://localhost:3000/comments\";\n\nexport default {\n  name: \"app\",\n  components: {\n    EventForm,\n    EventTable,\n    CommentForm,\n    // CommentTable,\n    Users\n  },\n  data() {\n    return {\n      events: [],\n      comments: []\n    };\n  },\n\n  mounted() {\n    this.getEvents();\n    this.getComments();\n  },\n\n methods: {\n\n    async getEvents() {\n      try {\n        const response = await fetch(\n         \"https://api.npoint.io/a284c810658102f76a1f/events\"\n          /*This is where our own API data will go*/\n          /*Use of the JSON https API created by Justina*/\n        );\n        const data = await response.json();\n        this.events = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async addEvent(event) {\n      try {\n        const response = await fetch(\n         'https://api.npoint.io/a284c810658102f76a1f/events',\n          /*This is where our own API data will go*/\n          /*Use of the JSON https API created by Justina*/\n          {\n            method: \"POST\",\n            body: JSON.stringify(event),\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n          }\n        );\n        const data = await response.json();\n        this.events = [...this.events, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async editEvent(id, updatedEvent) {\n      try {\n        const response = await fetch(\n          `https://api.npoint.io/a284c810658102f76a1f/events/${id}`,\n          /*This is where our own API data will go*/\n          /*Use of the JSON https API created by Justina*/\n          {\n            method: \"PUT\",\n            body: JSON.stringify(updatedEvent),\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n          }\n        );\n        const data = await response.json();\n        this.events = this.events.map(event =>\n          event.id === id ? data : event\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async deleteEvent(id) {\n      try {\n        await fetch(`https://api.npoint.io/a284c810658102f76a1f/events/${id}`, {\n          /*This is where our own API data will go*/\n          /*Use of the JSON https API created by Justina*/\n          method: \"DELETE\"\n        });\n        this.events = this.events.filter(event => event.id !== id);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    \n//  Comment form\n     async getComments() {\n      try {\n        const response = await fetch(\n          'https://api.npoint.io/a284c810658102f76a1f/comments',\n        );\n        const data = await response.json();\n        this.comments = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async addComment(comment) {\n      try {\n        const response = await fetch(\n          'https://api.npoint.io/a284c810658102f76a1f/comments',\n          {\n            method: \"POST\",\n            body: JSON.stringify(comment),\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n          }\n        );\n        const data = await response.json();\n        this.comments = [...this.comments, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async editComment(id, updatedComment) {\n      try {\n        const response = await fetch(\n          `https://api.npoint.io/a284c810658102f76a1f/comments/${id}`,\n          {\n            method: \"PUT\",\n            body: JSON.stringify(updatedComment),\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n          }\n        );\n        const data = await response.json();\n        this.comments = this.comments.map(comment =>\n          comment.id === id ? data : comment\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async deleteComment(id) {\n      try {\n        await fetch(`https://api.npoint.io/a284c810658102f76a1f/comments/${id}`, {\n          method: \"DELETE\"\n        });\n        this.comments = this.comments.filter(comment => comment.id !== id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n  }\n}; \n</script>"]},"metadata":{},"sourceType":"module"}