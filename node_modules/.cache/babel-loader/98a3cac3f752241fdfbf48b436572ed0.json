{"ast":null,"code":"import { vModelText as _vModelText, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/icons/edit.png';\nimport _imports_1 from '../assets/icons/delete.png';\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-040e3608\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"comment-form\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"success-message\"\n};\nconst _hoisted_4 = {\n  class: \"commentPosts\",\n  border: \"1px\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", null, \"name\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"post\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"action\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  key: 2\n};\nconst _hoisted_9 = {\n  key: 3\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_0,\n  alt: \"edit\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = [_hoisted_10];\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_1,\n  alt: \"delete\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = [_hoisted_12];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    class: \"commentForm\",\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    ref: \"name\",\n    type: \"text\",\n    class: _normalizeClass({\n      'has-error': $data.submitting && $options.invalidName\n    }),\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.comment.name = $event),\n    onFocus: _cache[1] || (_cache[1] = (...args) => $options.clearStatus && $options.clearStatus(...args)),\n    onKeypress: _cache[2] || (_cache[2] = (...args) => $options.clearStatus && $options.clearStatus(...args))\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, $data.comment.name]]), _withDirectives(_createElementVNode(\"input\", {\n    ref: \"post\",\n    type: \"text\",\n    class: _normalizeClass({\n      'has-error': $data.submitting && $options.invalidName\n    }),\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.comment.post = $event),\n    onFocus: _cache[4] || (_cache[4] = (...args) => $options.clearStatus && $options.clearStatus(...args)),\n    onKeypress: _cache[5] || (_cache[5] = (...args) => $options.clearStatus && $options.clearStatus(...args))\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, $data.comment.post]]), $data.error && $data.submitting ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \" ❗Please fill out all fields \")) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \" ✅ Comment successfully added \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.addComment($data.comment.id)),\n    class: \"button--primary\"\n  }, \" Add Comment \")], 32\n  /* HYDRATE_EVENTS */\n  )]), _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: comment.id\n    }, [_ctx.editing === comment.id ? (_openBlock(), _createElementBlock(\"td\", _hoisted_6, _toDisplayString(comment.name), 1\n    /* TEXT */\n    )) : _createCommentVNode(\"v-if\", true), _ctx.editing === comment.id ? (_openBlock(), _createElementBlock(\"td\", _hoisted_7, _toDisplayString(comment.post), 1\n    /* TEXT */\n    )) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <td>\\n          <button v-on:click=\\\"deleteComment(comment.id)\\\">\\n            <img\\n              class=\\\"crudIcon\\\"\\n              src=\\\"../assets/icons/delete.png\\\"\\n              alt=\\\"delete\\\"\\n            />\\n          </button>\\n          <button v-on:click=\\\"editComment(comment.id)\\\">\\n            <img class=\\\"crudIcon\\\" src=\\\"../assets/icons/edit.png\\\" alt=\\\"edit\\\" />\\n          </button>\\n        </td> \"), _ctx.editing === _ctx.event.id ? (_openBlock(), _createElementBlock(\"td\", _hoisted_8, [_createElementVNode(\"button\", {\n      onClick: _cache[8] || (_cache[8] = $event => _ctx.editEvent(_ctx.event))\n    }, \"Save\"), _createElementVNode(\"button\", {\n      class: \"muted-button\",\n      onClick: _cache[9] || (_cache[9] = $event => _ctx.editing = null)\n    }, \"Cancel\")])) : (_openBlock(), _createElementBlock(\"td\", _hoisted_9, [_createElementVNode(\"button\", {\n      onClick: _cache[10] || (_cache[10] = $event => _ctx.editMode(_ctx.event.id))\n    }, _hoisted_11), _createElementVNode(\"button\", {\n      onClick: _cache[11] || (_cache[11] = $event => _ctx.$emit('delete:event', _ctx.event.id))\n    }, _hoisted_13)]))]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":"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","names":["_imports_0","_imports_1","id","class","border","_createElementVNode","src","alt","_hoisted_10","_hoisted_12","_createElementBlock","onSubmit","$options","ref","type","$data","name","$event","onFocus","onKeypress","post","onClick","_hoisted_5","_Fragment","_renderList","comment","key","_ctx","_hoisted_6","_toDisplayString","_hoisted_7","_createCommentVNode","_hoisted_8","_hoisted_9"],"sourceRoot":"","sources":["/Users/justinaho1996/yoobee_JS_Framework_Assignment/src/components/Users.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"comment-form\">\n      <form class=\"commentForm\" @submit.prevent=\"handleSubmit\">\n        <input\n          ref=\"name\"\n          type=\"text\"\n          :class=\"{ 'has-error': submitting && invalidName }\"\n          v-model=\"comment.name\"\n          @focus=\"clearStatus\"\n          @keypress=\"clearStatus\"\n        />\n        <input\n          ref=\"post\"\n          type=\"text\"\n          :class=\"{ 'has-error': submitting && invalidName }\"\n          v-model=\"comment.post\"\n          @focus=\"clearStatus\"\n          @keypress=\"clearStatus\"\n        />\n        <p v-if=\"error && submitting\" class=\"error-message\">\n          ❗Please fill out all fields\n        </p>\n        <p v-if=\"success\" class=\"success-message\">\n          ✅ Comment successfully added\n        </p>\n        <button v-on:click=\"addComment(comment.id)\" class=\"button--primary\">\n          Add Comment\n        </button>\n      </form>\n    </div>\n\n    <table class=\"commentPosts\" border=\"1px\">\n      <tr >\n        <td>name</td>\n        <td>post</td>\n        <td>action</td>\n      </tr>\n      <tr v-for=\"comment in comments\" v-bind:key=\"comment.id\">\n        <td v-if=\"editing === comment.id\">{{ comment.name }}</td>\n        <td  v-if=\"editing === comment.id\">{{ comment.post }}</td>\n        <!-- <td>\n          <button v-on:click=\"deleteComment(comment.id)\">\n            <img\n              class=\"crudIcon\"\n              src=\"../assets/icons/delete.png\"\n              alt=\"delete\"\n            />\n          </button>\n          <button v-on:click=\"editComment(comment.id)\">\n            <img class=\"crudIcon\" src=\"../assets/icons/edit.png\" alt=\"edit\" />\n          </button>\n        </td> -->\n\n        <td v-if=\"editing === event.id\">\n          <button @click=\"editEvent(event)\">Save</button>\n          <button class=\"muted-button\" @click=\"editing = null\">Cancel</button>\n        </td>\n        <td v-else>\n          <button @click=\"editMode(event.id)\">\n            <img class=\"crudIcon\" src=\"../assets/icons/edit.png\" alt=\"edit\" />\n          </button>\n          <button @click=\"$emit('delete:event', event.id)\">\n            <img\n              class=\"crudIcon\"\n              src=\"../assets/icons/delete.png\"\n              alt=\"delete\"\n            />\n          </button>\n\n        </td>\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Users\",\n  data() {\n    return {\n      comments: null,\n      error: false,\n      submitting: false,\n      success: false,\n      comment: {\n        name: \"\",\n        post: \"\",\n      },\n    };\n  },\n  computed: {\n    invalidName() {\n      return this.comment.name === \"\";\n    },\n  },\n  methods: {\n    handleSubmit() {\n      this.clearStatus();\n      this.submitting = true;\n\n      if (this.invalidName) {\n        this.error = true;\n        return;\n      }\n\n      this.$emit(\"add:comment\", this.comment);\n      this.$refs.first.focus();\n      this.comment = {\n        name: \"\",\n        post: \"\",\n      };\n      this.clearStatus();\n      this.submitting = false;\n    },\n\n    clearStatus() {\n      this.success = false;\n      this.error = false;\n    },\n    getData() {\n      axios.get(\"http://localhost:3000/comments\").then((response) => {\n        this.users = response.data;\n        console.log(response);\n        this.comments = response.data;\n      });\n    },\n    async deleteComment(id) {\n      try {\n        await fetch(`http://localhost:3000/comments/${id}`, {\n          method: \"DELETE\",\n        });\n        this.comments = this.comments.filter((comment) => comment.id !== id);\n        console.log(this.comment.id);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async addComment() {\n      try {\n        const response = await fetch(\"http://localhost:3000/comments\", {\n          method: \"POST\",\n          body: JSON.stringify(this.comment),\n          headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n        });\n        const data = await response.json();\n        this.comments = [...this.comments, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async editComment(id, updatedComment) {\n      try {\n        const response = await fetch(`http://localhost:3000/comments/${id}`, {\n          method: \"PUT\",\n          body: JSON.stringify(updatedComment),\n          headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n        });\n        const data = await response.json();\n        this.comments = this.comments.map((comment) =>\n          comment.id === id ? data : comment\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n  mounted() {\n    this.getData();\n  },\n};\n</script>\n\n<style scoped>\n.commentPosts {\n  width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 50px;\n  margin-bottom: 100px;\n}\n\nbutton {\n  margin-right: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}