{"ast":null,"code":"import EventForm from \"@/components/EventForm.vue\";\nexport default {\n  name: \"app\",\n  components: {\n    EventForm\n  },\n\n  data() {\n    return {\n      events: []\n    };\n  },\n\n  mounted() {\n    this.getEvents();\n  },\n\n  methods: {\n    async getEvents() {\n      try {\n        const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n        const data = await response.json();\n        this.events = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async addEvent(event) {\n      try {\n        const response = await fetch(\"https://jsonplaceholder.typicode.com/users\", {\n          method: \"POST\",\n          body: JSON.stringify(event),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n        const data = await response.json();\n        this.events = [...this.events, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async editEvent(id, updatedEvent) {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: \"PUT\",\n          body: JSON.stringify(updatedEvent),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n        const data = await response.json();\n        this.events = this.events.map(event => event.id === id ? data : event);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async deleteEvent(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: \"DELETE\"\n        });\n        this.employees = this.employees.filter(employee => employee.id !== id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAcE,OAAOA,SAAP,MAAsB,4BAAtB;AAEF,eAAe;EACbC,IAAI,EAAE,KADO;EAEbC,UAAU,EAAE;IACVF;EADU,CAFC;;EAKbG,IAAI,GAAG;IACL,OAAO;MACLC,MAAM,EAAE;IADH,CAAP;EAGD,CATY;;EAWbC,OAAO,GAAG;IACR,KAAKC,SAAL;EACD,CAbY;;EAebC,OAAO,EAAE;IACP,MAAMD,SAAN,GAAkB;MAChB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAC1B,4CAD0B,CAA5B;QAGA,MAAMN,IAAG,GAAI,MAAMK,QAAQ,CAACE,IAAT,EAAnB;QACA,KAAKN,MAAL,GAAcD,IAAd;MACF,CANA,CAME,OAAOQ,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACF;IACD,CAXM;;IAaP,MAAME,QAAN,CAAeC,KAAf,EAAsB;MACpB,IAAI;QACF,MAAMN,QAAO,GAAI,MAAMC,KAAK,CAC1B,4CAD0B,EAE1B;UACEM,MAAM,EAAE,MADV;UAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAFR;UAGEK,OAAO,EAAE;YAAE,gBAAgB;UAAlB;QAHX,CAF0B,CAA5B;QAQA,MAAMhB,IAAG,GAAI,MAAMK,QAAQ,CAACE,IAAT,EAAnB;QACA,KAAKN,MAAL,GAAc,CAAC,GAAG,KAAKA,MAAT,EAAiBD,IAAjB,CAAd;MACF,CAXA,CAWE,OAAOQ,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACF;IACD,CA5BM;;IA8BP,MAAMS,SAAN,CAAgBC,EAAhB,EAAoBC,YAApB,EAAkC;MAChC,IAAI;QACF,MAAMd,QAAO,GAAI,MAAMC,KAAK,CACzB,8CAA6CY,EAAG,EADvB,EAE1B;UACEN,MAAM,EAAE,KADV;UAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,YAAf,CAFR;UAGEH,OAAO,EAAE;YAAE,gBAAgB;UAAlB;QAHX,CAF0B,CAA5B;QAQA,MAAMhB,IAAG,GAAI,MAAMK,QAAQ,CAACE,IAAT,EAAnB;QACA,KAAKN,MAAL,GAAc,KAAKA,MAAL,CAAYmB,GAAZ,CAAgBT,KAAI,IAChCA,KAAK,CAACO,EAAN,KAAaA,EAAb,GAAkBlB,IAAlB,GAAyBW,KADb,CAAd;MAGF,CAbA,CAaE,OAAOH,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACF;IACD,CA/CM;;IAiDP,MAAMa,WAAN,CAAkBH,EAAlB,EAAsB;MACpB,IAAI;QACF,MAAMZ,KAAK,CAAE,8CAA6CY,EAAG,EAAlD,EAAqD;UAC9DN,MAAM,EAAE;QADsD,CAArD,CAAX;QAGA,KAAKU,SAAL,GAAiB,KAAKA,SAAL,CAAeC,MAAf,CAAsBC,QAAO,IAAKA,QAAQ,CAACN,EAAT,KAAgBA,EAAlD,CAAjB;MACF,CALA,CAKE,OAAOV,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACF;IACF;;EA1DO;AAfI,CAAf","names":["EventForm","name","components","data","events","mounted","getEvents","methods","response","fetch","json","error","console","addEvent","event","method","body","JSON","stringify","headers","editEvent","id","updatedEvent","map","deleteEvent","employees","filter","employee"],"sourceRoot":"","sources":["C:\\yoobee_JS_Framework_Assignment\\src\\views\\CreateEvent.vue"],"sourcesContent":["<!--Thomas to update functionality-->\r\n<template>\r\n\r\n    <div class=\"create\">\r\n      \r\n    <event-form @add:employee=\"addEmployee\"/>\r\n\r\n    </div>\r\n\r\n   \r\n  \r\n  </template>\r\n  \r\n  <script>\r\n  import EventForm from \"@/components/EventForm.vue\";\r\n\r\nexport default {\r\n  name: \"app\",\r\n  components: {\r\n    EventForm\r\n  },\r\n  data() {\r\n    return {\r\n      events: []\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.getEvents();\r\n  },\r\n\r\n  methods: {\r\n    async getEvents() {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://jsonplaceholder.typicode.com/users\"\r\n        );\r\n        const data = await response.json();\r\n        this.events = data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async addEvent(event) {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://jsonplaceholder.typicode.com/users\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(event),\r\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        this.events = [...this.events, data];\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async editEvent(id, updatedEvent) {\r\n      try {\r\n        const response = await fetch(\r\n          `https://jsonplaceholder.typicode.com/users/${id}`,\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(updatedEvent),\r\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        this.events = this.events.map(event =>\r\n          event.id === id ? data : event\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async deleteEvent(id) {\r\n      try {\r\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\r\n          method: \"DELETE\"\r\n        });\r\n        this.employees = this.employees.filter(employee => employee.id !== id);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n}; \r\n  </script>\r\n  \r\n  <style>\r\n  @import '../assets/styles/main.css';\r\n  .formBorder{\r\n  border: 2px solid blue; \r\n  margin-top: 10%;\r\n  display: inline-block;\r\n  padding-left: 15%;\r\n  padding-right: 15%;\r\n  padding-top: 1%;\r\n  padding-bottom: 1%; \r\n}\r\n\r\n\r\n\r\n#address{\r\n  width: 353px;\r\n}\r\n\r\n#category, #privacy {\r\n  width: 360px;\r\n}\r\n\r\n#description{\r\n  border: 2px solid blue; \r\n  display: inline-block;\r\n  padding-left: 14%;\r\n  padding-right: 14.6%;\r\n  padding-top: 1%;\r\n  padding-bottom: 1%; \r\n}\r\n\r\n.postit {\r\n  width: 100px;\r\n  height: 30px;\r\n  float: right;\r\n  margin-left: 10px;\r\n}\r\n\r\n.postit:hover {\r\n  transform: scale(1.1);\r\n  background-color: #06bdb6;\r\n}\r\n\r\n.cancelit {\r\n  width: 100px;\r\n  height: 30px;\r\n  float: right;\r\n  color: red;\r\n  border: 2px solid red;\r\n}\r\n\r\n.cancelit:hover {\r\n  transform: scale(1.1);\r\n  background-color: red;\r\n  color: white\r\n}\r\n  </style>"]},"metadata":{},"sourceType":"module"}