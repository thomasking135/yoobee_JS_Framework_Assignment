{"ast":null,"code":"import backgroundUrl from \"../assets/images/LogInSignUpDesktop.jpg\";\nimport axios from \"axios\";\nconst baseURL = \"http://localhost:3000/users\";\nexport default {\n  name: 'login',\n\n  data() {\n    return {\n      backgroundUrl,\n      email: \"\",\n      username: \"\",\n      users: null,\n      formIsValid: true\n    };\n  },\n\n  mounted() {\n    fetch(baseURL).then(res => res.json()).then(data => this.users = data).catch(err => console.log(err.message));\n  },\n\n  methods: {\n    // async created() {\n    //     const response = await axios.get('users', {\n    //       headers: {\n    //         Authorization: 'Bearer ' + localStorage.getItem('token')\n    //       }\n    //     });\n    //     console.log(response);\n    // },\n    async submitForm() {\n      // const response = await axios.post(baseURL, {\n      //   email: this.email,\n      //   username: this.username\n      // })\n      // localStorage.setItem('token', response.data.token)\n      let username = localStorage.getItem(username);\n\n      if (username === 'justina') {\n        console.log('justina is already taken');\n      }\n\n      this.formIsValid = true;\n\n      if (this.email === \"\" || !this.email.includes(\"@\") || this.username.length < 1) {\n        this.formIsValid = false;\n        return;\n      } //GET\n\n\n      axios.get(baseURL).then(res => {\n        handleResult(res);\n      }).catch(err => console.log(err));\n\n      function handleResult(data) {\n        console.log(data);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgDA,OAAOA,aAAP,MAA0B,yCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAM,GAAI,6BAAhB;AACA,eAAe;EACbC,IAAI,EAAE,OADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLJ,aADK;MAELK,KAAK,EAAE,EAFF;MAGLC,QAAQ,EAAE,EAHL;MAILC,KAAK,EAAE,IAJF;MAKLC,WAAW,EAAE;IALR,CAAP;EAOD,CAVY;;EAWbC,OAAO,GAAG;IACRC,KAAK,CAACR,OAAD,CAAL,CACCS,IADD,CACMC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMP,IAAG,IAAK,KAAKG,KAAL,GAAaH,IAF3B,EAGCU,KAHD,CAGOC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHd;EAID,CAhBY;;EAiBbC,OAAO,EAAE;IACP;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA,MAAMC,UAAN,GAAmB;MACjB;MACA;MACA;MACA;MAEA;MACA,IAAId,QAAO,GAAIe,YAAY,CAACC,OAAb,CAAqBhB,QAArB,CAAf;;MAEE,IAAGA,QAAO,KAAM,SAAhB,EAA2B;QACzBU,OAAO,CAACC,GAAR,CAAa,0BAAb;MACF;;MAEF,KAAKT,WAAL,GAAmB,IAAnB;;MACA,IACE,KAAKH,KAAL,KAAe,EAAf,IACA,CAAC,KAAKA,KAAL,CAAWkB,QAAX,CAAoB,GAApB,CADD,IAEA,KAAKjB,QAAL,CAAckB,MAAd,GAAuB,CAHzB,EAIE;QACA,KAAKhB,WAAL,GAAmB,KAAnB;QACA;MACF,CArBiB,CAuBjB;;;MACAP,KAAI,CACDwB,GADH,CACOvB,OADP,EAEGS,IAFH,CAESC,GAAD,IAAS;QACbc,YAAY,CAACd,GAAD,CAAZ;MACD,CAJH,EAKGE,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;;MAOA,SAASW,YAAT,CAAsBtB,IAAtB,EAA4B;QAC1BY,OAAO,CAACC,GAAR,CAAYb,IAAZ;MACF;IAED;;EA7CM;AAjBI,CAAf","names":["backgroundUrl","axios","baseURL","name","data","email","username","users","formIsValid","mounted","fetch","then","res","json","catch","err","console","log","message","methods","submitForm","localStorage","getItem","includes","length","get","handleResult"],"sourceRoot":"","sources":["/Users/justinaho1996/yoobee_JS_Framework_Assignment/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div\n    class=\"background-image\"\n    :style=\"{ backgroundImage: 'url(' + backgroundUrl + ')' }\"\n  >\n    <div class=\"login\">\n      <h1>Login</h1>\n\n      <form class=\"loginForm\" @submit.prevent=\"submitForm\" novalidate>\n        <div class=\"loginForm__container\">\n          <input\n            class=\"loginFormInput\"\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            v-model.trim=\"email\"\n            required\n          />\n          <input\n            class=\"loginFormInput\"\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            v-model.trim=\"username\"\n            required\n          />\n          <button type=\"submit\" id=\"submitLogin\">Login</button>\n        </div>\n\n        <div class=\"loginForm__container\">\n          <span class=\"signUp\"\n            ><a href=\"/register\">Don't have an account?</a></span\n          >\n        </div>\n      </form>\n    </div>\n    <div v-if=\"!formIsValid\">Please enter a valid email and username</div>\n    <h3 v-if=\"users\">Hi, {{ this.username }}</h3>\n    <h3 v-if=\"!users\">You are not logged in</h3>\n\n  </div>\n</template>\n\n<style>\n@import \"../assets/styles/main.css\";\n</style>\n\n<script>\nimport backgroundUrl from \"../assets/images/LogInSignUpDesktop.jpg\";\nimport axios from \"axios\";\nconst baseURL = \"http://localhost:3000/users\"\nexport default {\n  name: 'login',\n  data() {\n    return {\n      backgroundUrl,\n      email: \"\",\n      username: \"\",\n      users: null,\n      formIsValid: true,\n    };\n  },\n  mounted() {\n    fetch(baseURL)\n    .then(res => res.json())\n    .then(data => this.users = data)\n    .catch(err => console.log(err.message))\n  },\n  methods: {\n    // async created() {\n    //     const response = await axios.get('users', {\n    //       headers: {\n    //         Authorization: 'Bearer ' + localStorage.getItem('token')\n    //       }\n    //     });\n\n    //     console.log(response);\n    // },\n    async submitForm() {\n      // const response = await axios.post(baseURL, {\n      //   email: this.email,\n      //   username: this.username\n      // })\n      \n      // localStorage.setItem('token', response.data.token)\n      let username = localStorage.getItem(username);\n\n        if(username === 'justina') {\n          console.log ('justina is already taken')\n        }\n\n      this.formIsValid = true;\n      if (\n        this.email === \"\" ||\n        !this.email.includes(\"@\") ||\n        this.username.length < 1\n      ) {\n        this.formIsValid = false;\n        return;\n      }\n\n      //GET\n      axios\n        .get(baseURL)\n        .then((res) => {\n          handleResult(res);\n        })\n        .catch((err) => console.log(err));\n\n      function handleResult(data) {\n        console.log(data);\n      }\n      \n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}