{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nimport _imports_0 from '../assets/icons/delete.png';\nimport _imports_1 from '../assets/icons/like.png';\nconst _hoisted_1 = {\n  id: \"comment-form\"\n};\nconst _hoisted_2 = {\n  class: \"commentField\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Name\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"commentField\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Comment\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"success-message\"\n};\nconst _hoisted_8 = {\n  class: \"commentPosts\",\n  border: \"1px\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"Comments posted\"), /*#__PURE__*/_createElementVNode(\"td\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = [\"onClick\"];\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_0,\n  alt: \"delete\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = [_hoisted_12];\nconst _hoisted_14 = {\n  id: \"counter\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"bold\"\n}, \"Like Hap?\", -1\n/* HOISTED */\n);\n\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_1,\n  alt: \"edit\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_17 = [_hoisted_16];\nconst _hoisted_18 = {\n  class: \"likeCountStyling\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    class: \"commentForm\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    ref: \"name\",\n    type: \"text\",\n    class: _normalizeClass({\n      'has-error': $data.submitting && $options.invalidName\n    }),\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.comment.name = $event),\n    onFocus: _cache[1] || (_cache[1] = (...args) => $options.clearStatus && $options.clearStatus(...args)),\n    onKeypress: _cache[2] || (_cache[2] = (...args) => $options.clearStatus && $options.clearStatus(...args))\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, $data.comment.name]])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    ref: \"post\",\n    type: \"text\",\n    class: _normalizeClass({\n      'has-error': $data.submitting && $options.invalidComment\n    }),\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.comment.post = $event),\n    onFocus: _cache[4] || (_cache[4] = (...args) => $options.clearStatus && $options.clearStatus(...args)),\n    onKeypress: _cache[5] || (_cache[5] = (...args) => $options.clearStatus && $options.clearStatus(...args))\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, $data.comment.post]])]), $data.error && $data.submitting ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \" ❗Please fill out all fields \")) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" ✅ Comment successfully added \")) : _createCommentVNode(\"v-if\", true)], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.addComment($data.comment.id)),\n    class: \"button--primary\"\n  }, \" Add Comment \")]), _createElementVNode(\"table\", _hoisted_8, [$data.comment.length < 1 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"No events\")) : _createCommentVNode(\"v-if\", true), _hoisted_10, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: comment.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(comment.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(comment.post), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteComment(comment.id)\n    }, _hoisted_13, 8\n    /* PROPS */\n    , _hoisted_11), _createCommentVNode(\" Couldn't figure out how to make the edit function work \"), _createCommentVNode(\" <button v-on:click=\\\"editComment(comment.id)\\\">\\n            <img\\n              class=\\\"crudIcon\\\"\\n              src=\\\"../assets/icons/edit.png\\\"\\n              alt=\\\"edit\\\"\\n            />\\n          </button> \")])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createCommentVNode(\"Add a counter\"), _createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _createElementVNode(\"button\", {\n    id: \"like\",\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.incrementValue && _ctx.incrementValue(...args)),\n    class: \"button-reset bg-green ba b--black ph4 pv3 mb2 white f4 dim\"\n  }, _hoisted_17), _createElementVNode(\"div\", _hoisted_18, _toDisplayString($data.counter), 1\n  /* TEXT */\n  )])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_imports_0","_imports_1","id","class","_createElementVNode","border","src","alt","_hoisted_12","_hoisted_16","onSubmit","$options","_hoisted_3","ref","type","$data","name","$event","onFocus","onKeypress","_hoisted_5","post","_createElementBlock","onClick","length","_hoisted_9","_hoisted_10","_Fragment","_renderList","comment","key","_toDisplayString","_createCommentVNode","_hoisted_15","_ctx"],"sourceRoot":"","sources":["/Users/justinaho1996/yoobee_JS_Framework_Assignment/src/components/Users.vue"],"sourcesContent":["// Coded by Justina Ho, tested by Keegan Dufty\n// comments input bar and comments table\n<template>\n  <div>\n    <div id=\"comment-form\">\n      <form class=\"commentForm\" @submit.prevent=\"handleSubmit\">\n        <div class=\"commentField\">\n          <label>Name</label>\n          <input\n            ref=\"name\"\n            type=\"text\"\n            :class=\"{ 'has-error': submitting && invalidName }\"\n            v-model=\"comment.name\"\n            @focus=\"clearStatus\"\n            @keypress=\"clearStatus\"\n          />\n        </div>\n        <div class=\"commentField\">\n          <label>Comment</label>\n          <input\n            ref=\"post\"\n            type=\"text\"\n            :class=\"{ 'has-error': submitting && invalidComment }\"\n            v-model=\"comment.post\"\n            @focus=\"clearStatus\"\n            @keypress=\"clearStatus\"\n          />\n        </div>\n        <p v-if=\"error && submitting\" class=\"error-message\">\n          ❗Please fill out all fields\n        </p>\n        <p v-if=\"success\" class=\"success-message\">\n          ✅ Comment successfully added\n        </p>\n      </form>\n      <button v-on:click=\"addComment(comment.id)\" class=\"button--primary\">\n        Add Comment\n      </button>\n    </div>\n\n    <table class=\"commentPosts\" border=\"1px\">\n        <p v-if=\"comment.length < 1\" >No events</p>\n      <tr>\n        <td>Name</td>\n        <td>Comments posted</td>\n        <td></td>\n      </tr>\n      <tr v-for=\"comment in comments\" v-bind:key=\"comment.id\">\n        <td>{{ comment.name }}</td>\n        <td>{{ comment.post }}</td>\n        <td>\n          <button v-on:click=\"deleteComment(comment.id)\">\n            <img\n              class=\"crudIcon\"\n              src=\"../assets/icons/delete.png\"\n              alt=\"delete\"\n            />\n          </button>\n\n          <!-- Couldn't figure out how to make the edit function work -->\n          <!-- <button v-on:click=\"editComment(comment.id)\">\n            <img\n              class=\"crudIcon\"\n              src=\"../assets/icons/edit.png\"\n              alt=\"edit\"\n            />\n          </button> -->\n\n        </td>\n      </tr>\n    </table>\n  </div>\n  <!--Add a counter-->\n    <div id=\"counter\">\n      <p class=\"bold\">Like Hap?</p>\n      <button\n        id=\"like\"\n        @click=\"incrementValue\"\n        class=\"button-reset bg-green ba b--black ph4 pv3 mb2 white f4 dim\">\n          <img class=\"crudIcon\" src=\"../assets/icons/like.png\" alt=\"edit\" />\n        </button>\n      <div class=\"likeCountStyling\">{{ counter }}</div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport CommentTable from \"@/components/CommentTable.vue\";\n\nexport default {\n  name: \"Users\",\n  data() {\n    return {\n      CommentTable,\n      counter: 65789,\n      comments: null,\n      error: false,\n      submitting: false,\n      success: false,\n      comment: {\n        name: \"\",\n        post: \"\",\n      },\n    };\n  },\n  computed: {\n    invalidName() {\n      return this.comment.name === \"\";\n    },\n      invalidComment() {\n      return this.comment.post === \"\";\n    },\n  },\n  methods: {\n    handleSubmit() {\n      this.clearStatus();\n      this.submitting = true;\n\n      if (this.invalidName || this.invalidComment) {\n        this.error = true;\n        return;\n      }\n\n      this.$emit(\"add:comment\", this.comment);\n      this.$refs.first.focus();\n      this.comment = {\n        name: \"\",\n        post: \"\",\n      };\n      this.clearStatus();\n      this.submitting = false;\n    },\n\n    clearStatus() {\n      this.success = false;\n      this.error = false;\n    },\n    getData() {\n      axios.get(\"http://localhost:3000/comments\").then((response) => {\n        this.users = response.data;\n        this.comments = response.data;\n      });\n    },\n    async deleteComment(id) {\n      try {\n        await fetch(`http://localhost:3000/comments/${id}`, {\n          method: \"DELETE\",\n        });\n        this.comments = this.comments.filter((comment) => comment.id !== id);\n        console.log(this.comment.id);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async addComment() {\n      try {\n        const response = await fetch(\"http://localhost:3000/comments\", {\n          method: \"POST\",\n          body: JSON.stringify(this.comment),\n          headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n        });\n        const data = await response.json();\n        this.comments = [...this.comments, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n// Couldn't figure out how to make the edit function work\n    // async editComment(id, updatedComment) {\n    //   try {\n    //     const response = await fetch(\n    //       `http://localhost:3000/comments/${id}`,\n    //       {\n    //         method: \"PUT\",\n    //         body: JSON.stringify(updatedComment),\n    //         headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n    //       }\n    //     );\n    //     const data = await response.json();\n    //     this.comments = this.comments.map(comment =>\n    //       comment.id === id ? data : comment\n    //     );\n    //   } catch (error) {\n    //     console.error(error);\n    //   }\n    // },\n  },\n  mounted() {\n    this.getData();\n  },\n};\n</script>\n\n<style>\n@import \"../assets/styles/style.css\";\n</style>\n"]},"metadata":{},"sourceType":"module"}