{"ast":null,"code":"import Axios from \"axios\";\nimport ProfileForm from \"@/components/ProfileForm.vue\";\nimport FooterSection from \"@/components/FooterSection.vue\";\nimport LoginView from \"../views/LoginView.vue\";\nimport EventTable from \"@/components/EventTable.vue\";\nconst baseURLEvents = \"http://localhost:3000/events\";\nconst baseURL = \"http://localhost:3000/users\";\nconst cloudName = \"dqyhsobqa\";\nconst unsignedUploadPreset = \"ewvntos9\";\nconst cloudinaryLink = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\nexport default {\n  name: \"App\",\n  components: {\n    ProfileForm,\n    FooterSection,\n    EventTable,\n    // eslint-disable-next-line vue/no-unused-components\n    LoginView\n  },\n\n  data() {\n    return {\n      src: \"\",\n      uploading: false,\n      users: [],\n      username: \"\"\n    };\n  },\n\n  mounted() {\n    Axios.get(baseURL).then(response => {\n      this.users.username = response.data;\n    });\n  },\n\n  /*async created() {\n    try {\n      const res = await Axios.get(baseURL);\n      this.items = res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },*/\n  methods: {\n    async getEvents() {\n      try {\n        const response = await fetch(baseURLEvents\n        /*Use of the JSON https API created by Justina*/\n        );\n        const data = await response.json();\n        this.events = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    uploadFile(fileData) {\n      this.uploading = true;\n      const formData = new FormData();\n      formData.append(\"file\", fileData);\n      formData.append(\"upload_preset\", unsignedUploadPreset);\n      Axios.post(cloudinaryLink, formData).then(res => {\n        this.src = res.data.url;\n        this.uploading = false;\n      });\n    },\n\n    removeImage() {\n      this.src = \"\";\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4CA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,MAAMC,aAAY,GAAI,8BAAtB;AAEA,MAAMC,OAAM,GAAI,6BAAhB;AAEA,MAAMC,SAAQ,GAAI,WAAlB;AACA,MAAMC,oBAAmB,GAAI,UAA7B;AACA,MAAMC,cAAa,GAAK,mCAAkCF,SAAU,SAApE;AAEA,eAAe;EACbG,IAAI,EAAE,KADO;EAEbC,UAAU,EAAE;IACVV,WADU;IAEVC,aAFU;IAGVE,UAHU;IAIV;IACAD;EALU,CAFC;;EASbS,IAAI,GAAG;IACL,OAAO;MACLC,GAAG,EAAE,EADA;MAELC,SAAS,EAAE,KAFN;MAGLC,KAAK,EAAE,EAHF;MAILC,QAAQ,EAAE;IAJL,CAAP;EAMD,CAhBY;;EAkBbC,OAAO,GAAG;IACRjB,KAAK,CAACkB,GAAN,CAAUZ,OAAV,EAAmBa,IAAnB,CAAyBC,QAAD,IAAc;MACpC,KAAKL,KAAL,CAAWC,QAAX,GAAsBI,QAAQ,CAACR,IAA/B;IACD,CAFD;EAGD,CAtBY;;EAwBb;;;;;;;;EASAS,OAAO,EAAE;IACP,MAAMC,SAAN,GAAkB;MAChB,IAAI;QACF,MAAMF,QAAO,GAAI,MAAMG,KAAK,CAC1BlB;QACA;QAF0B,CAA5B;QAIA,MAAMO,IAAG,GAAI,MAAMQ,QAAQ,CAACI,IAAT,EAAnB;QACA,KAAKC,MAAL,GAAcb,IAAd;MACF,CAPA,CAOE,OAAOc,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACF;IACD,CAZM;;IAaPE,UAAU,CAACC,QAAD,EAAW;MACnB,KAAKf,SAAL,GAAiB,IAAjB;MACA,MAAMgB,QAAO,GAAI,IAAIC,QAAJ,EAAjB;MACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,QAAxB;MACAC,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCxB,oBAAjC;MACAR,KAAK,CAACiC,IAAN,CAAWxB,cAAX,EAA2BqB,QAA3B,EAAqCX,IAArC,CAA2Ce,GAAD,IAAS;QACjD,KAAKrB,GAAL,GAAWqB,GAAG,CAACtB,IAAJ,CAASuB,GAApB;QACA,KAAKrB,SAAL,GAAiB,KAAjB;MACD,CAHD;IAID,CAtBM;;IAuBPsB,WAAW,GAAG;MACZ,KAAKvB,GAAL,GAAW,EAAX;IACD;;EAzBM;AAjCI,CAAf","names":["Axios","ProfileForm","FooterSection","LoginView","EventTable","baseURLEvents","baseURL","cloudName","unsignedUploadPreset","cloudinaryLink","name","components","data","src","uploading","users","username","mounted","get","then","response","methods","getEvents","fetch","json","events","error","console","uploadFile","fileData","formData","FormData","append","post","res","url","removeImage"],"sourceRoot":"","sources":["/Users/keegs/Documents/GitHub/yoobee_JS_Framework_Assignment/yoobee_JS_Framework_Assignment/src/views/ProfileView.vue"],"sourcesContent":["<template>\n  <h1 class=\"title\">Profile</h1>\n  <div class=\"ProfileInfoContainer\">\n    <div class=\"ProfilePicContainer\">\n      <ProfileForm\n        @image-upload=\"uploadFile\"\n        :src=\"src\"\n        :isUploading=\"uploading\"\n        @remove-image=\"removeImage\"\n      />\n    </div>\n    <br /><br />\n    <div class=\"ProfileUserDeatilsContainer\">\n      <h3>{{ username }}</h3>\n      <p>Username: {{ message }}</p>\n      <input v-model=\"message\" placeholder=\"Username\" />\n      <br /><br />\n      <span>Bio:</span>\n      <p style=\"white-space: pre-line\">{{ message }}</p>\n      <textarea\n        v-model=\"message\"\n        placeholder=\"I love to create event\"\n      ></textarea>\n\n      <br /><br />\n\n      <router-link to=\"/create\"\n        ><button id=\"createEvent\" class=\"button--primary\">\n          Create a new event\n        </button></router-link\n      >\n      <router-link to=\"/login\"\n        ><button class=\"button--secondary\">Login</button></router-link\n      >\n      <br /><br />\n    </div>\n  </div>\n\n  <h3 class=\"center suggestedEvents\">Suggested Events</h3>\n\n  <FooterSection />\n</template>\n\n<script>\nimport Axios from \"axios\";\nimport ProfileForm from \"@/components/ProfileForm.vue\";\nimport FooterSection from \"@/components/FooterSection.vue\";\nimport LoginView from \"../views/LoginView.vue\";\nimport EventTable from \"@/components/EventTable.vue\";\nconst baseURLEvents = \"http://localhost:3000/events\";\n\nconst baseURL = \"http://localhost:3000/users\";\n\nconst cloudName = \"dqyhsobqa\";\nconst unsignedUploadPreset = \"ewvntos9\";\nconst cloudinaryLink = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n\nexport default {\n  name: \"App\",\n  components: {\n    ProfileForm,\n    FooterSection,\n    EventTable,\n    // eslint-disable-next-line vue/no-unused-components\n    LoginView,\n  },\n  data() {\n    return {\n      src: \"\",\n      uploading: false,\n      users: [],\n      username: \"\",\n    };\n  },\n\n  mounted() {\n    Axios.get(baseURL).then((response) => {\n      this.users.username = response.data;\n    });\n  },\n\n  /*async created() {\n    try {\n      const res = await Axios.get(baseURL);\n      this.items = res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },*/\n\n  methods: {\n    async getEvents() {\n      try {\n        const response = await fetch(\n          baseURLEvents\n          /*Use of the JSON https API created by Justina*/\n        );\n        const data = await response.json();\n        this.events = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    uploadFile(fileData) {\n      this.uploading = true;\n      const formData = new FormData();\n      formData.append(\"file\", fileData);\n      formData.append(\"upload_preset\", unsignedUploadPreset);\n      Axios.post(cloudinaryLink, formData).then((res) => {\n        this.src = res.data.url;\n        this.uploading = false;\n      });\n    },\n    removeImage() {\n      this.src = \"\";\n    },\n  },\n};\n</script>\n\n<style>\n.ProfileInfoContainer {\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  margin-bottom: 50px;\n}\n.ProfilePicContainer {\n  display: flex;\n  flex-direction: column;\n}\n\n.ProfileUserDeatilsContainer {\n  display: flex;\n  flex-direction: column;\n}\n\n.center {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n#createEvent {\n  background-color: #08bdb6;\n  text-align: center;\n  font-size: 14px;\n  font-family: lato, sans-serif;\n  font-weight: 500;\n  font-style: normal;\n  color: #303030;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 50px;\n  padding-right: 50px;\n}\n\n#createEvent:hover {\n  background-color: #48b1bf;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}