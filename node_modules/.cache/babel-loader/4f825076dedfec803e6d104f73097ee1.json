{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AvatarImgUpload = _resolveComponent(\"AvatarImgUpload\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AvatarImgUpload, {\n    onImageUpload: $options.uploadFile,\n    src: $data.src,\n    isUploading: $data.uploading,\n    onRemoveImage: $options.removeImage\n  }, null, 8\n  /* PROPS */\n  , [\"onImageUpload\", \"src\", \"isUploading\", \"onRemoveImage\"])]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;;;;;uBAARC,oBAOM,KAPN,cAOM,CANJC,aAKEC,0BALF,EAKE;IAJCC,aAAY,EAAEC,mBAIf;IAHCC,GAAG,EAAEC,SAGN;IAFCC,WAAW,EAAED,eAEd;IADCE,aAAY,EAAEJ;EACf,CALF;;EAAA,2DAMI,CAPN","names":["id","_createElementBlock","_createVNode","_component_AvatarImgUpload","onImageUpload","$options","src","$data","isUploading","onRemoveImage"],"sourceRoot":"","sources":["C:\\yoobee_JS_Framework_Assignment\\src\\views\\ProfileView.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <AvatarImgUpload\r\n      @image-upload=\"uploadFile\"\r\n      :src=\"src\"\r\n      :isUploading=\"uploading\"\r\n      @remove-image=\"removeImage\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Axios from \"axios\";\r\nimport AvatarImgUpload from \"/components/AvatarImgUpload\";\r\n\r\nconst cloudName = \"dqyhsobqa\";\r\nconst unsignedUploadPreset = \"ewvntos9\";\r\nconst cloudinaryLink = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    AvatarImgUpload\r\n  },\r\n  data() {\r\n    return {\r\n      src: \"\",\r\n      uploading: false\r\n    };\r\n  },\r\n  methods: {\r\n    uploadFile(fileData) {\r\n      this.uploading = true;\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fileData);\r\n      formData.append(\"upload_preset\", unsignedUploadPreset);\r\n      Axios.post(cloudinaryLink, formData).then(res => {\r\n        this.src = res.data.url;\r\n        this.uploading = false;\r\n      });\r\n    },\r\n    removeImage() {\r\n      this.src = \"\";\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}