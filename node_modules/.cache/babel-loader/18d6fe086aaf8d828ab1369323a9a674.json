{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/icons/delete.png';\nimport _imports_1 from '../assets/icons/edit.png';\nimport _imports_2 from '../assets/icons/like.png';\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-040e3608\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"comment-form\"\n};\nconst _hoisted_2 = {\n  class: \"commentField\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Name\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"commentField\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Comment\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"success-message\"\n};\nconst _hoisted_9 = {\n  class: \"commentPosts\",\n  border: \"1px\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"td\", null, \"Comments posted\"), /*#__PURE__*/_createElementVNode(\"td\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = [\"onClick\"];\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_0,\n  alt: \"delete\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = [_hoisted_12];\nconst _hoisted_14 = [\"onClick\"];\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_1,\n  alt: \"edit\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_16 = [_hoisted_15];\nconst _hoisted_17 = {\n  id: \"counter\"\n};\n\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"bold\"\n}, \"Like Hap?\", -1\n/* HOISTED */\n));\n\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"crudIcon\",\n  src: _imports_2,\n  alt: \"edit\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_20 = [_hoisted_19];\nconst _hoisted_21 = {\n  class: \"likeCountStyling\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    class: \"commentForm\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_ctx.events.length < 1 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"No events\")) : _createCommentVNode(\"v-if\", true), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    ref: \"name\",\n    type: \"text\",\n    class: _normalizeClass({\n      'has-error': $data.submitting && $options.invalidName\n    }),\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.comment.name = $event),\n    onFocus: _cache[1] || (_cache[1] = (...args) => $options.clearStatus && $options.clearStatus(...args)),\n    onKeypress: _cache[2] || (_cache[2] = (...args) => $options.clearStatus && $options.clearStatus(...args))\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, $data.comment.name]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    ref: \"post\",\n    type: \"text\",\n    class: _normalizeClass({\n      'has-error': $data.submitting && $options.invalidComment\n    }),\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.comment.post = $event),\n    onFocus: _cache[4] || (_cache[4] = (...args) => $options.clearStatus && $options.clearStatus(...args)),\n    onKeypress: _cache[5] || (_cache[5] = (...args) => $options.clearStatus && $options.clearStatus(...args))\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, $data.comment.post]])]), $data.error && $data.submitting ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" ❗Please fill out all fields \")) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" ✅ Comment successfully added \")) : _createCommentVNode(\"v-if\", true)], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.addComment($data.comment.id)),\n    class: \"button--primary\"\n  }, \" Add Comment \")]), _createElementVNode(\"table\", _hoisted_9, [_hoisted_10, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: comment.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(comment.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(comment.post), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteComment(comment.id)\n    }, _hoisted_13, 8\n    /* PROPS */\n    , _hoisted_11), _createElementVNode(\"button\", {\n      onClick: $event => $options.editComment(comment.id)\n    }, _hoisted_16, 8\n    /* PROPS */\n    , _hoisted_14)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createCommentVNode(\"Add a counter\"), _createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _createElementVNode(\"button\", {\n    id: \"like\",\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.incrementValue && _ctx.incrementValue(...args)),\n    class: \"button-reset bg-green ba b--black ph4 pv3 mb2 white f4 dim\"\n  }, _hoisted_20), _createElementVNode(\"div\", _hoisted_21, _toDisplayString($data.counter), 1\n  /* TEXT */\n  )])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_imports_0","_imports_1","_imports_2","id","class","_createElementVNode","border","src","alt","_hoisted_12","_hoisted_15","_hoisted_19","onSubmit","$options","_ctx","length","_createElementBlock","_hoisted_3","_hoisted_4","ref","type","$data","name","$event","onFocus","onKeypress","_hoisted_6","post","onClick","_hoisted_10","_Fragment","_renderList","comment","key","_toDisplayString","_createCommentVNode","_hoisted_18"],"sourceRoot":"","sources":["/Users/justinaho1996/yoobee_JS_Framework_Assignment/src/components/Users.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"comment-form\">\n      <form class=\"commentForm\" @submit.prevent=\"handleSubmit\">\n        <div class=\"commentField\">\n            <p v-if=\"events.length < 1\" >No events</p>\n          <label>Name</label>\n          <input\n            ref=\"name\"\n            type=\"text\"\n            :class=\"{ 'has-error': submitting && invalidName }\"\n            v-model=\"comment.name\"\n            @focus=\"clearStatus\"\n            @keypress=\"clearStatus\"\n          />\n        </div>\n        <div class=\"commentField\">\n          <label>Comment</label>\n          <input\n            ref=\"post\"\n            type=\"text\"\n            :class=\"{ 'has-error': submitting && invalidComment }\"\n            v-model=\"comment.post\"\n            @focus=\"clearStatus\"\n            @keypress=\"clearStatus\"\n          />\n        </div>\n        <p v-if=\"error && submitting\" class=\"error-message\">\n          ❗Please fill out all fields\n        </p>\n        <p v-if=\"success\" class=\"success-message\">\n          ✅ Comment successfully added\n        </p>\n      </form>\n      <button v-on:click=\"addComment(comment.id)\" class=\"button--primary\">\n        Add Comment\n      </button>\n    </div>\n\n    <table class=\"commentPosts\" border=\"1px\">\n      <tr>\n        <td>Name</td>\n        <td>Comments posted</td>\n        <td></td>\n      </tr>\n      <tr v-for=\"comment in comments\" v-bind:key=\"comment.id\">\n        <td>{{ comment.name }}</td>\n        <td>{{ comment.post }}</td>\n        <td>\n          <button v-on:click=\"deleteComment(comment.id)\">\n            <img\n              class=\"crudIcon\"\n              src=\"../assets/icons/delete.png\"\n              alt=\"delete\"\n            />\n          </button>\n          <button v-on:click=\"editComment(comment.id)\">\n            <img\n              class=\"crudIcon\"\n              src=\"../assets/icons/edit.png\"\n              alt=\"edit\"\n            />\n          </button>\n          \n        </td>\n      </tr>\n    </table>\n  </div>\n  <!--Add a counter-->\n    <div id=\"counter\">\n      <p class=\"bold\">Like Hap?</p>\n      <button\n        id=\"like\"\n        @click=\"incrementValue\"\n        class=\"button-reset bg-green ba b--black ph4 pv3 mb2 white f4 dim\">\n          <img class=\"crudIcon\" src=\"../assets/icons/like.png\" alt=\"edit\" />\n        </button>\n      <div class=\"likeCountStyling\">{{ counter }}</div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport CommentTable from \"@/components/CommentTable.vue\";\n\nexport default {\n  name: \"Users\",\n  data() {\n    return {\n      CommentTable,\n      counter: 65789,\n      comments: null,\n      error: false,\n      submitting: false,\n      success: false,\n      comment: {\n        name: \"\",\n        post: \"\",\n      },\n    };\n  },\n  computed: {\n    invalidName() {\n      return this.comment.name === \"\";\n    },\n      invalidComment() {\n      return this.comment.post === \"\";\n    },\n  },\n  methods: {\n    handleSubmit() {\n      this.clearStatus();\n      this.submitting = true;\n\n      if (this.invalidName || this.invalidComment) {\n        this.error = true;\n        return;\n      }\n\n      this.$emit(\"add:comment\", this.comment);\n      this.$refs.first.focus();\n      this.comment = {\n        name: \"\",\n        post: \"\",\n      };\n      this.clearStatus();\n      this.submitting = false;\n    },\n\n    clearStatus() {\n      this.success = false;\n      this.error = false;\n    },\n    getData() {\n      axios.get(\"http://localhost:3000/comments\").then((response) => {\n        this.users = response.data;\n        this.comments = response.data;\n      });\n    },\n    async deleteComment(id) {\n      try {\n        await fetch(`http://localhost:3000/comments/${id}`, {\n          method: \"DELETE\",\n        });\n        this.comments = this.comments.filter((comment) => comment.id !== id);\n        console.log(this.comment.id);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async addComment() {\n      try {\n        const response = await fetch(\"http://localhost:3000/comments\", {\n          method: \"POST\",\n          body: JSON.stringify(this.comment),\n          headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n        });\n        const data = await response.json();\n        this.comments = [...this.comments, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async editComment(id, updatedComment) {\n      try {\n        const response = await fetch(\n          `http://localhost:3000/comments/${id}`,\n          {\n            method: \"PUT\",\n            body: JSON.stringify(updatedComment),\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n          }\n        );\n        const data = await response.json();\n        this.comments = this.comments.map(comment =>\n          comment.id === id ? data : comment\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n  mounted() {\n    this.getData();\n  },\n};\n</script>\n\n<style scoped>\n\n#counter {\n    margin-bottom: 70px;\n}\n\n.commentPosts {\n  width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 50px;\n  margin-bottom: 100px;\n  border: none;\n  border: 1px solid var(--green);\n   border-collapse: separate;\n   border-spacing: 0;\n}\n\n.commentPosts td {\n   border: 1px solid var(--green);\n   border-collapse: separate;\n   border-spacing: 0;\n}\n\n.commentField {\n  margin-bottom: 10px;\n  justify-content:center;\n  display: flex;\n}\n\n.commentField label {\n width: 100px;\n}\n\n.commentField input {\n  width: 500px;\n}\n\n\nbutton {\n  margin-right: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}