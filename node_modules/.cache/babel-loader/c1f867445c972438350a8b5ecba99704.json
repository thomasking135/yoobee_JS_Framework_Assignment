{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-12787d8d\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"src\"];\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-spinner fa-spin\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", {\n    class: \"image-container\",\n    onClick: _cache[3] || (_cache[3] = $event => {\n      $options.openFileUpload();\n    }),\n    onDrop: _cache[4] || (_cache[4] = _withModifiers($event => {\n      $options.onDrop($event);\n    }, [\"prevent\", \"stop\"])),\n    onDragenter: _cache[5] || (_cache[5] = _withModifiers($event => {\n      $options.onDragEnterAndOver($event);\n    }, [\"prevent\", \"stop\"])),\n    onDragover: _cache[6] || (_cache[6] = _withModifiers($event => {\n      $options.onDragEnterAndOver($event);\n    }, [\"prevent\", \"stop\"]))\n  }, [_createElementVNode(\"img\", {\n    src: $options.imgSrc,\n    alt: \"User Avatar here\",\n    id: \"avatar\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_1), _createElementVNode(\"input\", {\n    type: \"file\",\n    name: \"fileInput\",\n    id: \"fileInput\",\n    ref: \"avatarRef\",\n    accept: \"image/*\",\n    onChange: _cache[0] || (_cache[0] = $event => {\n      $options.onFileUpload();\n    })\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), _createElementVNode(\"i\", {\n    class: \"fas fa-trash-alt remove-image\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers($event => {\n      $options.removeImage();\n    }, [\"stop\"]))\n  }), $props.isUploading ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"loading-overlay\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers($event => {\n      $options.preventClick();\n    }, [\"stop\"]))\n  }, _hoisted_3)) : _createCommentVNode(\"v-if\", true)], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"p\", _hoisted_4, _toDisplayString($data.errorMessage), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;;gEAwBQA,oBAAsC,GAAtC,EAAsC;EAAnCC,KAAK,EAAC;AAA6B,CAAtC,EAAiC,IAAjC,EAAiC;AAAA;AAAjC;;oBAAAC;;EAGDD,KAAK,EAAC;;;uBA1BXE,oBA2BM,KA3BN,EA2BM,IA3BN,EA2BM,CA1BJH,oBAwBM,KAxBN,EAwBM;IAvBJC,KAAK,EAAC,iBAuBF;IAtBHG,OAAK;MAAEC;IAAc,CAAhB,CAsBF;IArBHC,MAAI;MAAeD,gBAAOE,MAAP;IAAa,CAA5B,EAA4B,mBAA5B,EAqBD;IApBHC,WAAS;MAAeH,4BAAmBE,MAAnB;IAAyB,CAAxC,EAAwC,mBAAxC,EAoBN;IAnBHE,UAAQ;MAAeJ,4BAAmBE,MAAnB;IAAyB,CAAxC,EAAwC,mBAAxC;EAmBL,CAxBN,GAOEP,oBAAwD,KAAxD,EAAwD;IAAlDU,GAAG,EAAEL,eAA6C;IAArCM,GAAG,EAAC,kBAAiC;IAAdC,EAAE,EAAC;EAAW,CAAxD;;EAAA,eACAZ,oBAOE,OAPF,EAOE;IANAa,IAAI,EAAC,MAML;IALAC,IAAI,EAAC,WAKL;IAJAF,EAAE,EAAC,WAIH;IAHAG,GAAG,EAAC,WAGJ;IAFAC,MAAM,EAAC,SAEP;IADCC,QAAM;MAAEZ;IAAY,CAAd;EACP,CAPF;;EAAA,GAQAL,oBAA0E,GAA1E,EAA0E;IAAvEC,KAAK,EAAC,+BAAiE;IAAhCG,OAAK;MAAOC;IAAW,CAAlB,EAAkB,QAAlB;EAA2B,CAA1E,GAIQa,oCAHRf,oBAMM,KANN,EAMM;UAAA;IALJF,KAAK,EAAC,iBAKF;IAJHG,OAAK;MAAOC;IAAY,CAAnB,EAAmB,QAAnB;EAIF,CANN,mDAjBF;;EAAA,CA0BI,EADJL,oBAA+C,GAA/C,cAA+CmB,iBAAnBC,kBAAmB,CAA/C,EAAwC;EAAA;EAAxC,CACI,CA3BN","names":["_createElementVNode","class","_hoisted_2","_createElementBlock","onClick","$options","onDrop","$event","onDragenter","onDragover","src","alt","id","type","name","ref","accept","onChange","$props","_toDisplayString","$data"],"sourceRoot":"","sources":["C:\\yoobee_JS_Framework_Assignment\\src\\components\\ProfileForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div\r\n      class=\"image-container\"\r\n      @click=\"openFileUpload();\"\r\n      @drop.prevent.stop=\"onDrop($event);\"\r\n      @dragenter.prevent.stop=\"onDragEnterAndOver($event);\"\r\n      @dragover.prevent.stop=\"onDragEnterAndOver($event);\"\r\n    >\r\n      <img :src=\"imgSrc\" alt=\"User Avatar here\" id=\"avatar\" />\r\n      <input\r\n        type=\"file\"\r\n        name=\"fileInput\"\r\n        id=\"fileInput\"\r\n        ref=\"avatarRef\"\r\n        accept=\"image/*\"\r\n        @change=\"onFileUpload();\"\r\n      />\r\n      <i class=\"fas fa-trash-alt remove-image\" @click.stop=\"removeImage();\"></i>\r\n      <div\r\n        class=\"loading-overlay\"\r\n        @click.stop=\"preventClick();\"\r\n        v-if=\"isUploading\"\r\n      >\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n      </div>\r\n    </div>\r\n    <p class=\"error-message\">{{ errorMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport defaultImage from \"../assets/logo.JPG\";\r\n\r\nexport default {\r\n  name: \"ProfileForm\",\r\n  props: {\r\n    src: {\r\n      type: String\r\n    },\r\n    maxSize: {\r\n      type: Number,\r\n      default: 2097152\r\n    },\r\n    isUploading: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      file: {},\r\n      uploadedImageSrc: \"\",\r\n      errorMessage: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    preventClick() {\r\n      // placeholder to prevent click on the overlay\r\n    },\r\n    onDragEnterAndOver(event) {\r\n      event.dataTransfer.dropEffect = \"move\";\r\n    },\r\n    testFile(file) {\r\n      this.errorMessage = \"\";\r\n      \r\n      if (!file) {\r\n        return true;\r\n      }\r\n\r\n      if (!/image(\\/{1})(jpeg|png|jpg|gif)/.test(file.type)) {\r\n        this.errorMessage = `Wrong filetype, please upload a png, jpeg, jpg or a gif file`;\r\n        return true;\r\n      }\r\n\r\n      if (file.size > this.maxSize) {\r\n        this.errorMessage = `File size exceeds ${humanReadableSize}, please upload an image less than ${humanReadableSize}`;\r\n        return true;\r\n      }\r\n\r\n      return;\r\n    },\r\n    onDrop(event) {\r\n      const uploadedFile = event.dataTransfer.files[0];\r\n\r\n      if (this.testFile(uploadedFile)) {\r\n        return;\r\n      }\r\n\r\n      this.file = uploadedFile;\r\n      this.renderImage(this.file);\r\n    },\r\n    openFileUpload() {\r\n      this.$refs.avatarRef.click();\r\n    },\r\n    onFileUpload() {\r\n      const uploadedFile = this.$refs.avatarRef.files[0];\r\n\r\n      if (this.testFile(uploadedFile)) {\r\n        return;\r\n      }\r\n\r\n      this.file = uploadedFile;\r\n      this.renderImage(this.file);\r\n    },\r\n    renderImage(file) {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = event => {\r\n        this.uploadedImageSrc = event.target.result;\r\n        this.$emit(\"image-upload\", this.file);\r\n      };\r\n      fileReader.readAsDataURL(file);\r\n    },\r\n    removeImage() {\r\n      this.file = \"\";\r\n      this.uploadedImageSrc = \"\";\r\n      this.$emit(\"remove-image\");\r\n    }\r\n  },\r\n  computed: {\r\n    imgSrc() {\r\n      if (!this.isUploading && this.src) {\r\n        return this.src;\r\n      }\r\n\r\n      return this.uploadedImageSrc || defaultImage;\r\n    }\r\n  },\r\n  watch: {\r\n    isUploading(newValue, oldValue) {\r\n      if (newValue !== oldValue && newValue === false) {\r\n        this.uploadedImageSrc = \"\";\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image-container {\r\n  height: 100px;\r\n  width: 100px;\r\n  border: 5px solid #666;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  cursor: pointer;\r\n}\r\n\r\n#fileInput {\r\n  visibility: hidden;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n}\r\n\r\n#avatar {\r\n  height: 100px;\r\n  width: 100px;\r\n  object-fit: cover;\r\n}\r\n\r\n.remove-image {\r\n  color: #666;\r\n  position: absolute;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  font-size: 15px;\r\n  opacity: 0.4;\r\n  z-index: 999;\r\n}\r\n\r\n.remove-image:hover {\r\n  opacity: 0.7;\r\n}\r\n\r\n.loading-overlay {\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #999;\r\n  opacity: 0.4;\r\n}\r\n\r\n.loading-overlay i {\r\n  font-size: 35px;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}