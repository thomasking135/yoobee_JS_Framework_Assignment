{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a92cc43\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"comment-form\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Comment name\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"success-message\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"Add Comment\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    ref: \"first\",\n    type: \"text\",\n    class: _normalizeClass({\n      'has-error': $data.submitting && $options.invalidName\n    }),\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.comment.name = $event),\n    onFocus: _cache[1] || (_cache[1] = (...args) => $options.clearStatus && $options.clearStatus(...args)),\n    onKeypress: _cache[2] || (_cache[2] = (...args) => $options.clearStatus && $options.clearStatus(...args))\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, $data.comment.name]]), $data.error && $data.submitting ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"❗Please fill out all required fields\")) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"✅ Comment successfully added\")) : _createCommentVNode(\"v-if\", true), _hoisted_5], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACOA,EAAE,EAAC;;;gEAEJC,oBAA2B,OAA3B,EAA2B,IAA3B,EAAO,cAAP,EAAmB;AAAA;AAAnB;;;;EAS8BC,KAAK,EAAC;;;;EAClBA,KAAK,EAAC;;;gEACxBD,oBAA4B,QAA5B,EAA4B,IAA5B,EAAQ,aAAR,EAAmB;AAAA;AAAnB;;;uBAbJE,oBAeM,KAfN,cAeM,CAdJF,oBAaO,MAbP,EAaO;IAbAG,QAAM,wDAAUC,uDAAV,EAAsB,WAAtB;EAaN,CAbP,GACEC,4BACAL,oBAOC,OAPD,EAOC;IANCM,GAAG,EAAC,OAML;IALCC,IAAI,EAAC,MAKN;IAJEN,KAAK;MAAA,aAAiBO,oBAAcJ;IAA/B,EAIP;+DAHUI,cAAQC,OAAIC,OAGtB;IAFEC,OAAK,yCAAEP,qDAAF,CAEP;IADEQ,UAAQ,yCAAER,qDAAF;EACV,CAPD;;EAAA,kBAIWI,cAAQC,SAIVD,eAASA,kCAAlBN,oBAA4F,GAA5F,cAAoD,sCAApD,wCACSM,+BAATN,oBAA0E,GAA1E,cAA0C,8BAA1C,wCACAW,WAZF;;EAAA,CAcI,CAfN","names":["id","_createElementVNode","class","_createElementBlock","onSubmit","$options","_hoisted_2","ref","type","$data","name","$event","onFocus","onKeypress","_hoisted_5"],"sourceRoot":"","sources":["/Users/justinaho1996/yoobee_JS_Framework_Assignment/src/components/CommentForm.vue"],"sourcesContent":["<template>\n  <div id=\"comment-form\">\n    <form @submit.prevent=\"handleSubmit\">\n      <label>Comment name</label>\n      <input\n        ref=\"first\"\n        type=\"text\"\n        :class=\"{ 'has-error': submitting && invalidName }\"\n        v-model=\"comment.name\"\n        @focus=\"clearStatus\"\n        @keypress=\"clearStatus\"\n      >\n      <p v-if=\"error && submitting\" class=\"error-message\">❗Please fill out all required fields</p>\n      <p v-if=\"success\" class=\"success-message\">✅ Comment successfully added</p>\n      <button>Add Comment</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"comment-form\",\n  data() {\n    return {\n      error: false,\n      submitting: false,\n      success: false,\n      comment: {\n        name: \"\"\n      }\n    };\n  },\n  computed: {\n    invalidName() {\n      return this.comment.name === \"\";\n    }\n  },\n  methods: {\n    handleSubmit() {\n      this.clearStatus();\n      this.submitting = true;\n\n      this.$emit(\"add:comment\", this.comment);\n      this.$refs.first.focus();\n      this.comment = {\n        name: \"\",\n        email: \"\"\n      };\n      this.clearStatus();\n      this.submitting = false;\n    },\n\n    clearStatus() {\n      this.success = false;\n      this.error = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\nform {\n  margin-bottom: 2rem;\n}\n\n[class*=\"-message\"] {\n  font-weight: 500;\n}\n\n.error-message {\n  color: #d33c40;\n}\n\n.success-message {\n  color: #32a95d;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}