{"ast":null,"code":"import Axios from \"axios\";\nimport ProfileForm from \"@/components/ProfileForm.vue\";\nimport FooterSection from \"@/components/FooterSection.vue\";\nimport LoginView from \"../views/LoginView.vue\";\nimport EventTable from \"@/components/EventTable.vue\";\nconst baseURLEvents = \"http://localhost:3000/events\"; //const baseURL = \"http://localhost:3000/users\";\n\nconst cloudName = \"dqyhsobqa\";\nconst unsignedUploadPreset = \"ewvntos9\";\nconst cloudinaryLink = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\nexport default {\n  name: \"App\",\n  components: {\n    ProfileForm,\n    FooterSection,\n    EventTable,\n    // eslint-disable-next-line vue/no-unused-components\n    LoginView\n  },\n\n  data() {\n    return {\n      src: \"\",\n      uploading: false,\n      users: [],\n      username: \"\",\n      events: []\n    };\n  },\n\n  mounted() {\n    this.getEvents();\n  },\n\n  /*mounted() {\n    Axios.get(baseURL).then((response) => {\n      this.users.username = response.data;\n    });\n  },\n  */\n\n  /*async created() {\n    try {\n      const res = await Axios.get(baseURL);\n      this.items = res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },*/\n  methods: {\n    async getEvents() {\n      try {\n        const response = await fetch(baseURLEvents\n        /*Use of the JSON https API created by Justina*/\n        );\n        const data = await response.json();\n        this.events = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    uploadFile(fileData) {\n      this.uploading = true;\n      const formData = new FormData();\n      formData.append(\"file\", fileData);\n      formData.append(\"upload_preset\", unsignedUploadPreset);\n      Axios.post(cloudinaryLink, formData).then(res => {\n        this.src = res.data.url;\n        this.uploading = false;\n      });\n    },\n\n    removeImage() {\n      this.src = \"\";\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiDA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,MAAMC,aAAY,GAAI,8BAAtB,C,CAEA;;AAEA,MAAMC,SAAQ,GAAI,WAAlB;AACA,MAAMC,oBAAmB,GAAI,UAA7B;AACA,MAAMC,cAAa,GAAK,mCAAkCF,SAAU,SAApE;AAEA,eAAe;EACbG,IAAI,EAAE,KADO;EAEbC,UAAU,EAAE;IACVT,WADU;IAEVC,aAFU;IAGVE,UAHU;IAIV;IACAD;EALU,CAFC;;EASbQ,IAAI,GAAG;IACL,OAAO;MACLC,GAAG,EAAE,EADA;MAELC,SAAS,EAAE,KAFN;MAGLC,KAAK,EAAE,EAHF;MAILC,QAAQ,EAAE,EAJL;MAKLC,MAAM,EAAE;IALH,CAAP;EAOD,CAjBY;;EAmBbC,OAAO,GAAG;IACR,KAAKC,SAAL;EACD,CArBY;;EAuBb;;;;;AAKF;;EACE;;;;;;;;EASAC,OAAO,EAAE;IACP,MAAMD,SAAN,GAAkB;MAChB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAC1BhB;QACA;QAF0B,CAA5B;QAIA,MAAMM,IAAG,GAAI,MAAMS,QAAQ,CAACE,IAAT,EAAnB;QACA,KAAKN,MAAL,GAAcL,IAAd;MACF,CAPA,CAOE,OAAOY,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACF;IACD,CAZM;;IAaPE,UAAU,CAACC,QAAD,EAAW;MACnB,KAAKb,SAAL,GAAiB,IAAjB;MACA,MAAMc,QAAO,GAAI,IAAIC,QAAJ,EAAjB;MACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,QAAxB;MACAC,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCtB,oBAAjC;MACAP,KAAK,CAAC8B,IAAN,CAAWtB,cAAX,EAA2BmB,QAA3B,EAAqCI,IAArC,CAA2CC,GAAD,IAAS;QACjD,KAAKpB,GAAL,GAAWoB,GAAG,CAACrB,IAAJ,CAASsB,GAApB;QACA,KAAKpB,SAAL,GAAiB,KAAjB;MACD,CAHD;IAID,CAtBM;;IAuBPqB,WAAW,GAAG;MACZ,KAAKtB,GAAL,GAAW,EAAX;IACD;;EAzBM;AAtCI,CAAf","names":["Axios","ProfileForm","FooterSection","LoginView","EventTable","baseURLEvents","cloudName","unsignedUploadPreset","cloudinaryLink","name","components","data","src","uploading","users","username","events","mounted","getEvents","methods","response","fetch","json","error","console","uploadFile","fileData","formData","FormData","append","post","then","res","url","removeImage"],"sourceRoot":"","sources":["/Users/keegs/Documents/GitHub/yoobee_JS_Framework_Assignment/yoobee_JS_Framework_Assignment/src/views/ProfileView.vue"],"sourcesContent":["<template>\n  <h1 class=\"title\">Profile</h1>\n  <div class=\"ProfileInfoContainer\">\n    <div class=\"ProfilePicContainer\">\n      <ProfileForm\n        @image-upload=\"uploadFile\"\n        :src=\"src\"\n        :isUploading=\"uploading\"\n        @remove-image=\"removeImage\"\n      />\n    </div>\n    <br /><br />\n    <div class=\"ProfileUserDeatilsContainer\">\n      <h3>{{ username }}</h3>\n      <p>Username: {{ message }}</p>\n      <input v-model=\"message\" placeholder=\"Username\" />\n      <br /><br />\n      <span>Bio:</span>\n      <p style=\"white-space: pre-line\">{{ message }}</p>\n      <textarea\n        v-model=\"message\"\n        placeholder=\"I love to create event\"\n      ></textarea>\n\n      <br /><br />\n\n      <router-link to=\"/create\"\n        ><button id=\"createEvent\" class=\"button--primary\">\n          Create a new event\n        </button></router-link\n      >\n      <router-link to=\"/login\"\n        ><button class=\"button--secondary\">Login</button></router-link\n      >\n      <br /><br />\n    </div>\n  </div>\n\n  <h3 class=\"center suggestedEvents\">Suggested Events</h3>\n  <event-table\n    class=\"displayCenter\"\n    :events=\"events\"\n    @delete:event=\"deleteEvent\"\n    @edit:event=\"editEvent\"\n  />\n  <FooterSection />\n</template>\n\n<script>\nimport Axios from \"axios\";\nimport ProfileForm from \"@/components/ProfileForm.vue\";\nimport FooterSection from \"@/components/FooterSection.vue\";\nimport LoginView from \"../views/LoginView.vue\";\nimport EventTable from \"@/components/EventTable.vue\";\nconst baseURLEvents = \"http://localhost:3000/events\";\n\n//const baseURL = \"http://localhost:3000/users\";\n\nconst cloudName = \"dqyhsobqa\";\nconst unsignedUploadPreset = \"ewvntos9\";\nconst cloudinaryLink = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n\nexport default {\n  name: \"App\",\n  components: {\n    ProfileForm,\n    FooterSection,\n    EventTable,\n    // eslint-disable-next-line vue/no-unused-components\n    LoginView,\n  },\n  data() {\n    return {\n      src: \"\",\n      uploading: false,\n      users: [],\n      username: \"\",\n      events: [],\n    };\n  },\n\n  mounted() {\n    this.getEvents();\n  },\n\n  /*mounted() {\n    Axios.get(baseURL).then((response) => {\n      this.users.username = response.data;\n    });\n  },\n*/\n  /*async created() {\n    try {\n      const res = await Axios.get(baseURL);\n      this.items = res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },*/\n\n  methods: {\n    async getEvents() {\n      try {\n        const response = await fetch(\n          baseURLEvents\n          /*Use of the JSON https API created by Justina*/\n        );\n        const data = await response.json();\n        this.events = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    uploadFile(fileData) {\n      this.uploading = true;\n      const formData = new FormData();\n      formData.append(\"file\", fileData);\n      formData.append(\"upload_preset\", unsignedUploadPreset);\n      Axios.post(cloudinaryLink, formData).then((res) => {\n        this.src = res.data.url;\n        this.uploading = false;\n      });\n    },\n    removeImage() {\n      this.src = \"\";\n    },\n  },\n};\n</script>\n\n<style>\n.ProfileInfoContainer {\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  margin-bottom: 50px;\n}\n.ProfilePicContainer {\n  display: flex;\n  flex-direction: column;\n}\n\n.ProfileUserDeatilsContainer {\n  display: flex;\n  flex-direction: column;\n}\n\n.center {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n#createEvent {\n  background-color: #08bdb6;\n  text-align: center;\n  font-size: 14px;\n  font-family: lato, sans-serif;\n  font-weight: 500;\n  font-style: normal;\n  color: #303030;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 50px;\n  padding-right: 50px;\n}\n\n#createEvent:hover {\n  background-color: #48b1bf;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}