{"ast":null,"code":"new Vue({\n  el: \"#profile\",\n  data: {\n    imageData: \"\" // we will store base64 format of image in this string\n\n  },\n  methods: {\n    previewImage: function (event) {\n      // Reference to the DOM input element\n      var input = event.target; // Ensure that you have a file before attempting to read it\n\n      if (input.files && input.files[0]) {\n        // create a new FileReader to read this image and convert to base64 format\n        var reader = new FileReader(); // Define a callback function to run, when FileReader finishes its job\n\n        reader.onload = e => {\n          // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n          // Read image as base64 and set to imageData\n          this.imageData = e.target.result;\n        }; // Start the reader job - read file as a data url (base64 format)\n\n\n        reader.readAsDataURL(input.files[0]);\n      }\n    }\n  }\n});","map":{"version":3,"mappings":"AA+DE,IAAIA,GAAJ,CAAQ;EACRC,EAAE,EAAE,UADI;EAERC,IAAI,EAAE;IACJC,SAAS,EAAE,EADP,CACU;;EADV,CAFE;EAKRC,OAAO,EAAE;IACPC,YAAY,EAAE,UAAUC,KAAV,EAAiB;MAC7B;MACA,IAAIC,KAAI,GAAID,KAAK,CAACE,MAAlB,CAF6B,CAG7B;;MACA,IAAID,KAAK,CAACE,KAAN,IAAeF,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAnB,EAAmC;QACjC;QACA,IAAIC,MAAK,GAAI,IAAIC,UAAJ,EAAb,CAFiC,CAGjC;;QACAD,MAAM,CAACE,MAAP,GAAiBC,CAAD,IAAO;UACrB;UACA;UACA,KAAKV,SAAL,GAAiBU,CAAC,CAACL,MAAF,CAASM,MAA1B;QACD,CAJD,CAJiC,CASjC;;;QACAJ,MAAM,CAACK,aAAP,CAAqBR,KAAK,CAACE,KAAN,CAAY,CAAZ,CAArB;MACF;IACF;EAjBO;AALD,CAAR","names":["Vue","el","data","imageData","methods","previewImage","event","input","target","files","reader","FileReader","onload","e","result","readAsDataURL"],"sourceRoot":"","sources":["C:\\yoobee_JS_Framework_Assignment\\src\\views\\ProfileView.vue"],"sourcesContent":["<template>\r\n  \r\n  <div class=\"profile\">\r\n   \r\n    \r\n    <div class=\"profileGrid\">\r\n      <div class=\"ProfileImageContainer\">\r\n        <div id=\"app\">\r\n    <div>\r\n      <div class=\"file-upload-form\">\r\n        Upload an image file:\r\n        <input type=\"file\" @change=\"previewImage\" accept=\"image/*\">\r\n      </div>\r\n      <div class=\"image-preview\" v-if=\"imageData.length > 0\">\r\n        <img class=\"preview\" :src=\"imageData\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n        <button class=\"updateProfileImage\" onchange=\"upload()\">Update Image</button>\r\n      </div>\r\n      \r\n    \r\n\r\n\r\n  <div class=\"profileDetails\">\r\n    <br><br><br><br>  \r\n    <form action=\"#\" method=\"get\" id=\"myForm\"></form>\r\n        <label>Username</label><br>\r\n        <input type=\"text\" id=\"textbox\" name=\"textfield\" /><br><br>\r\n        <label>Bio</label><br>\r\n        <textarea id=\"userBio\" name=\"userBio\" rows=\"5\" cols=\"33\"/><br><br>\r\n        <button type=\"submit\" id=\"updateProfile\" class=\"submitBio\" onclick=\"change()\">Update</button><br><br>\r\n        <router-link to=\"/login\"><button id=\"logoutProfile\" type=\"submit\" class=\"LogOutBtn\">Log Out</button></router-link><br>\r\n      </div>\r\n    </div>\r\n\r\n    <!--\r\n    <div class=\"ProfileEvents\">\r\n      <div class=\"ProfileTabs\">\r\n        <button class=\"ProfileMyEvents ProfileTabButtons\">My Events</button>\r\n        <button class=\"ProfileParticipating ProfileTabButtons\">\r\n          Participating\r\n        </button>\r\n      </div>\r\n      <p class=\"ProfileNotParticipating\">\r\n        You are currently not participating in any events.\r\n      </p>\r\n      <a><router-link to=\"/\"><button class=\"ProfileExploreButtons\">Explore new events</button></router-link></a>\r\n      <a><router-link to=\"/\"><button class=\"ProfileExploreButtons\">Explore upcoming events</button></router-link></a>\r\n    </div>-->\r\n  </div>\r\n\r\n  <!--<hr class=\"profileHR\">-->\r\n\r\n</template>\r\n\r\n\r\n\r\n<style>\r\n@import '../assets/styles/main.css';\r\n</style>\r\n\r\n<script>\r\n  new Vue({\r\n  el: \"#profile\",\r\n  data: {\r\n    imageData: \"\" // we will store base64 format of image in this string\r\n  },\r\n  methods: {\r\n    previewImage: function (event) {\r\n      // Reference to the DOM input element\r\n      var input = event.target;\r\n      // Ensure that you have a file before attempting to read it\r\n      if (input.files && input.files[0]) {\r\n        // create a new FileReader to read this image and convert to base64 format\r\n        var reader = new FileReader();\r\n        // Define a callback function to run, when FileReader finishes its job\r\n        reader.onload = (e) => {\r\n          // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\r\n          // Read image as base64 and set to imageData\r\n          this.imageData = e.target.result;\r\n        };\r\n        // Start the reader job - read file as a data url (base64 format)\r\n        reader.readAsDataURL(input.files[0]);\r\n      }\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n//import { change } from \"../assets/JS/views.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}